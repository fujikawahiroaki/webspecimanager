[{"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/registerServiceWorker.js":"1","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/login.js":"2","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/components/LoginForm.js":"3","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/authProvider.js":"4","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/authConfig.js":"5","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/App.js":"6","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/index.js":"7","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/components/Dashboard.js":"8","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/themes/theme.js":"9","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenShow.js":"10","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenList.js":"11","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/index.js":"12","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonList.js":"13","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonShow.js":"14","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonEdit.js":"15","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonCreate.js":"16","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonList.js":"17","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/index.js":"18","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonShow.js":"19","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/index.js":"20","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/addUploadFeature.js":"21","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourList.js":"22","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/drfProvider.js":"23","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourEdit.js":"24","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointList.js":"25","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/index.js":"26","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointCreate.js":"27","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/index.js":"28","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourShow.js":"29","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointEdit.js":"30","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointShow.js":"31","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourCreate.js":"32","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingList.js":"33","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingCreate.js":"34","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonCreate.js":"35","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/index.js":"36","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingShow.js":"37","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingEdit.js":"38","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenEdit.js":"39","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenCreate.js":"40","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/index.js":"41","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelList.js":"42","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelEdit.js":"43","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelCreate.js":"44","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelShow.js":"45"},{"size":5102,"mtime":1609999895543,"results":"46","hashOfConfig":"47"},{"size":212,"mtime":1609999895543,"results":"48","hashOfConfig":"47"},{"size":1681,"mtime":1609999895543,"results":"49","hashOfConfig":"47"},{"size":2137,"mtime":1610095049550,"results":"50","hashOfConfig":"47"},{"size":230,"mtime":1609999895547,"results":"51","hashOfConfig":"47"},{"size":2711,"mtime":1612690459805,"results":"52","hashOfConfig":"47"},{"size":260,"mtime":1610095049538,"results":"53","hashOfConfig":"47"},{"size":332,"mtime":1610095049538,"results":"54","hashOfConfig":"47"},{"size":413,"mtime":1610095272308,"results":"55","hashOfConfig":"47"},{"size":6012,"mtime":1612672580991,"results":"56","hashOfConfig":"47"},{"size":15612,"mtime":1612663097754,"results":"57","hashOfConfig":"47"},{"size":289,"mtime":1612672789247,"results":"58","hashOfConfig":"47"},{"size":5142,"mtime":1610352078380,"results":"59","hashOfConfig":"47"},{"size":2287,"mtime":1611357576549,"results":"60","hashOfConfig":"47"},{"size":5028,"mtime":1612061399636,"results":"61","hashOfConfig":"47"},{"size":4613,"mtime":1611358481028,"results":"62","hashOfConfig":"47"},{"size":5002,"mtime":1612083293134,"results":"63","hashOfConfig":"47"},{"size":260,"mtime":1612083521941,"results":"64","hashOfConfig":"47"},{"size":2239,"mtime":1611358587548,"results":"65","hashOfConfig":"47"},{"size":325,"mtime":1610187108565,"results":"66","hashOfConfig":"47"},{"size":16383,"mtime":1612675519855,"results":"67","hashOfConfig":"47"},{"size":2994,"mtime":1612690515894,"results":"68","hashOfConfig":"47"},{"size":5173,"mtime":1613039717628,"results":"69","hashOfConfig":"47"},{"size":1629,"mtime":1613039887310,"results":"70","hashOfConfig":"47"},{"size":6758,"mtime":1611451630764,"results":"71","hashOfConfig":"47"},{"size":337,"mtime":1611457842896,"results":"72","hashOfConfig":"47"},{"size":4762,"mtime":1611467187903,"results":"73","hashOfConfig":"47"},{"size":241,"mtime":1611361890395,"results":"74","hashOfConfig":"47"},{"size":1107,"mtime":1611363072979,"results":"75","hashOfConfig":"47"},{"size":5004,"mtime":1612670300815,"results":"76","hashOfConfig":"47"},{"size":2435,"mtime":1611457809228,"results":"77","hashOfConfig":"47"},{"size":1374,"mtime":1612995029827,"results":"78","hashOfConfig":"47"},{"size":3113,"mtime":1612253557570,"results":"79","hashOfConfig":"47"},{"size":2052,"mtime":1612251370492,"results":"80","hashOfConfig":"47"},{"size":4668,"mtime":1612083517064,"results":"81","hashOfConfig":"47"},{"size":397,"mtime":1612252948847,"results":"82","hashOfConfig":"47"},{"size":1226,"mtime":1612253751726,"results":"83","hashOfConfig":"47"},{"size":2177,"mtime":1612252000576,"results":"84","hashOfConfig":"47"},{"size":4543,"mtime":1612672740913,"results":"85","hashOfConfig":"47"},{"size":4853,"mtime":1612689648421,"results":"86","hashOfConfig":"47"},{"size":253,"mtime":1612690559316,"results":"87","hashOfConfig":"47"},{"size":2844,"mtime":1612994867993,"results":"88","hashOfConfig":"47"},{"size":1686,"mtime":1613019506553,"results":"89","hashOfConfig":"47"},{"size":1584,"mtime":1612997083978,"results":"90","hashOfConfig":"47"},{"size":2130,"mtime":1613018694204,"results":"91","hashOfConfig":"47"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},"h034s0",{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"94"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"109"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"112"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"94"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"118"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"122"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"109"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"118"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"122"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"122"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":25,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"144"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"118"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"94"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"153","messages":"154","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"102"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"94"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"161","messages":"162","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"163","messages":"164","errorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"94"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"112"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"112"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"122"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"178"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181","usedDeprecatedRules":"144"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"118"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"112"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"190","usedDeprecatedRules":"94"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"94"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"122"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"118"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"118"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"94"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":"211","usedDeprecatedRules":"144"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"118"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"219","usedDeprecatedRules":"94"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"94"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"225","usedDeprecatedRules":"118"},"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/registerServiceWorker.js",[],["226","227"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/login.js",[],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/components/LoginForm.js",["228"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/authProvider.js",["229"],"import authConfig from \"./authConfig\";\nimport {Auth0Client} from '@auth0/auth0-spa-js';\n\nconst auth0 = new Auth0Client({\n    domain: authConfig.domain,\n    client_id: authConfig.clientID,\n    redirect_uri: authConfig.redirectURI,\n    audience: \"http://www.fujikawa-h.net\",\n    cacheLocation: \"localstorage\",\n    scope: \"openid profile read:specimens create:specimens delete:specimens\" \n});\n\n\nexport default {\n    // called when the user attempts to log in\n    login: (url) => {\n        if (typeof url === 'undefined') {\n            return auth0.loginWithRedirect()\n        }\n        return auth0.handleRedirectCallback(url.location);\n    },\n    // called when the user clicks on the logout button\n    logout: () => {\n        return auth0.isAuthenticated().then(function (isAuthenticated) {\n            if (isAuthenticated) { // need to check for this as react-admin calls logout in case checkAuth failed\n                if(localStorage.hasOwnProperty('wsat')) {\n                    localStorage.removeItem('wsat');\n                };\n                return auth0.logout({\n                    redirect_uri: window.location.origin,\n                    federated: true // have to be enabled to invalidate refresh token\n                });\n            }\n            return Promise.resolve()\n        })\n    },\n    // called when the API returns an error\n    // checkError: ({status}) => {\n    //     if (status === 401 || status === 403) {\n    //         return Promise.reject();\n    //     }\n    //     return Promise.resolve();\n    // },\n    // called when the user navigates to a new location, to check for authentication\n    checkAuth: () => {\n        return auth0.isAuthenticated().then(function (isAuthenticated) {\n            if (isAuthenticated) {\n                auth0.getTokenSilently().then(access_token => localStorage.setItem('wsat', access_token));\n                return Promise.resolve();\n            }\n            return auth0.getTokenSilently()\n        })\n    },\n    // called when the user navigates to a new location, to check for permissions / roles\n    getPermissions: () => {\n        return Promise.resolve()\n    },\n};\n",["230","231"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/authConfig.js",["232"],"export default {\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    redirectURI: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n    audience: process.env.REACT_APP_AUTH0_AUDIENCE\n}\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/App.js",["233","234","235","236"],"import * as React from 'react';\nimport { Provider } from 'react-redux';\n\n// react admin\nimport {Admin, Resource, ListGuesser, EditGuesser, ShowGuesser, fetchUtils} from 'react-admin';\n\n// drf\nimport drfProvider from './utils/drfProvider';\nimport addUploadCapabilities from './utils/addUploadFeature';\n\n// pages\nimport loginPage from \"./pages/login\";\nimport specimens from \"./pages/specimens\";\nimport customTaxa from \"./pages/taxa/customTaxa\";\nimport defaultTaxa from './pages/taxa/defaultTaxa';\nimport tours from './pages/tours';\nimport collectPoints from './pages/collectPoints';\nimport collectionSettings from './pages/collectionSettings';\nimport labels from \"./pages/labels\";\n\n// components\nimport Dashboard from './components/Dashboard';\nimport authProvider from './utils/authProvider';\n\n// themes\nimport { theme } from \"./themes/theme\";\n\n// 日本語化\nimport japaneseMessages from '@bicstone/ra-language-japanese';\nimport polyglotI18nProvider from 'ra-i18n-polyglot';\n\n// browser history\nimport { createBrowserHistory as createHistory } from 'history';\n\n\nconst history = createHistory();\n\nconst i18nProvider = polyglotI18nProvider(() => japaneseMessages, 'ja');\n\nconst httpClient = (url, options = {}) => {\n    if (!options.headers) {\n        options.headers = new Headers({ Accept: 'application/json' });\n    }\n    const token =  localStorage.getItem('wsat');\n    options.headers.set('Authorization',  `Bearer ${token}`);\n    options.user = {\n        authenticated: true\n    };\n    console.log(options)\n    return fetchUtils.fetchJson(url, options);\n}\n\nconst dataProvider = addUploadCapabilities(drfProvider('http://localhost:8000/api', httpClient))\n\nconst App = () => (\n    <Admin locale=\"ja\" i18nProvider={i18nProvider}\n        authProvider={authProvider}\n        dataProvider={dataProvider}\n        history={history}\n        dashboard={Dashboard}\n        loginPage={loginPage}\n        theme={theme}\n    >\n        <Resource name=\"specimens/own-specimens\"  options={{ label: '標本' }} {...specimens}/>\n        <Resource name=\"taxa/own-taxa\" options={{ label: 'カスタム分類情報' }} {...customTaxa} />\n        <Resource name=\"taxa/shared-taxa\" options={{ label: 'デフォルト分類情報' }} {...defaultTaxa} />\n        <Resource name=\"collect-points/own-collect-points\" options={{ label: '採集地点' }} {...collectPoints} />\n        <Resource name=\"tours/own-tours\" options={{ label: '採集行' }} {...tours} />\n        <Resource name=\"collection-settings/own-collection-settings\" options={{label: 'コレクション設定'}} {...collectionSettings} />\n        <Resource name=\"label-maker/own-labels\" options={{ label: 'ラベル' }} {...labels} />\n    </Admin>\n);\nexport default App;\n",["237","238"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/index.js",[],["239","240"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/components/Dashboard.js",["241"],"import * as React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardHeader from '@material-ui/core/CardHeader';\n\nexport default () => (\n    <Card>\n        <CardHeader title=\"WebSpecimanager\" />\n        <CardContent>ようこそ</CardContent>\n    </Card>\n);\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/themes/theme.js",[],["242","243"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenShow.js",["244","245","246"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    ImageField,\n    NumberField,\n    EditButton,\n} from 'react-admin';\n\n\nconst SpecimenShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst SpecimenShow = props => (\n    <Show {...props} title=\"標本\" actions={<SpecimenShowActions/>}>\n        <TabbedShowLayout>\n            <Tab label='標本固有情報'>\n                <ReferenceField label=\"登録されたコレクション設定\" source=\"collection_settings_info\" reference=\"collection-settings/own-collection-settings\" link=\"show\">\n                    <TextField source=\"collection_name\"/>\n                </ReferenceField>\n                <TextField source=\"collection_name\" label=\"コレクション名\"/>\n                <TextField source=\"institution_code\" label=\"機関コード\"/>\n                <NumberField source=\"collection_code\" label=\"標本ID\"/>\n                <TextField source=\"identified_by\" label=\"同定者\"/>\n                <DateField source=\"date_identified\" label=\"同定年月日\"/>\n                <TextField source=\"collecter\" label=\"採集者\"/>\n                <TextField source=\"year\" label=\"採集年\"/>\n                <TextField source=\"month\" label=\"採集月\"/>\n                <TextField source=\"day\" label=\"採集日\"/>\n                <TextField source=\"sex\" label=\"性別\"/>\n                <TextField source=\"preparation_type\" label=\"標本の種類\"/>\n                <TextField source=\"disposition\" label=\"現在の標本の状況\"/>\n                <TextField source=\"sampling_protocol\" label=\"採集方法\"/>\n                <TextField source=\"sampling_effort\" label=\"採集中の作業メモ\"/>\n                <TextField source=\"lifestage\" label=\"ライフステージ\"/>\n                <TextField source=\"establishment_means\" label=\"生成プロセス\"/>\n                <TextField source=\"rights\" label=\"ライセンス\"/>\n                <TextField source=\"note\" label=\"備考\" />\n                <DateField source=\"date_last_modified\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='分類情報(カスタムが優先表示されます)'>\n                <ReferenceField label=\"登録されたデフォルト分類情報\" source=\"default_taxon_info\" reference=\"taxa/shared-taxa\" link=\"show\">\n                    <TextField source=\"scientific_name\"/>\n                </ReferenceField>\n                <ReferenceField label=\"登録されたカスタム分類情報\" source=\"custom_taxon_info\" reference=\"taxa/own-taxa\" link=\"show\">\n                    <TextField source=\"scientific_name\"/>\n                </ReferenceField>\n                <TextField source=\"kingdom\" label=\"界\" />\n                <TextField source=\"phylum\" label=\"門\" />\n                <TextField source=\"class_name\" label=\"綱\" />\n                <TextField source=\"order\" label=\"目\" />\n                <TextField source=\"suborder\" label=\"亜目\" />\n                <TextField source=\"family\" label=\"科\" />\n                <TextField source=\"subfamily\" label=\"亜科\" />\n                <TextField source=\"tribe\" label=\"族\" />\n                <TextField source=\"subtribe\" label=\"亜族\" />\n                <TextField source=\"genus\" label=\"属\"/>\n                <TextField source=\"subgenus\" label=\"亜属\"/>\n                <TextField source=\"species\" label=\"種\"/>\n                <TextField source=\"subspecies\" label=\"亜種\"/>\n                <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n                <TextField source=\"name_publishedin_year\" label=\"記載年\"/>\n                <TextField source=\"japanese_name\" label=\"和名\"/>\n            </Tab>\n            <Tab label='採集地点'>\n                <ReferenceField label=\"登録された採集地点\" source=\"collect_point_info\" reference=\"collect-points/own-collect-points\" link=\"show\">\n                    <TextField source=\"japanese_place_name\"/>\n                </ReferenceField>\n                <TextField source=\"country\" label=\"国名コード(ISO 3166-1)\"/>\n                <TextField source=\"contient\" label=\"大陸\"/>\n                <TextField source=\"island_group\" label=\"島群\"/>\n                <TextField source=\"island\" label=\"島\"/>\n                <TextField source=\"state_provice\" label=\"県(州)\"/>\n                <TextField source=\"county\" label=\"海外における群・区\"/>\n                <TextField source=\"municipality\" label=\"市名以下の詳細地名\"/>\n                <TextField source=\"verbatim_locality\" label=\"採集地の説明\"/>\n                <TextField source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\"/>\n                <TextField source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\"/>\n                <NumberField source=\"longitude\" label=\"経度\"/>\n                <NumberField source=\"latitude\" label=\"緯度\"/>\n                <NumberField source=\"coordinate_precision\" label=\"採集地の範囲\"/>\n                <NumberField source=\"minimum_elevation\" label=\"最低標高\"/>\n                <NumberField source=\"maximum_elevation\" label=\"最高標高\"/>\n                <NumberField source=\"minimum_depth\" label=\"水面からの最浅の距離\"/>\n                <NumberField source=\"maximum_depth\" label=\"水面からの最深の距離\"/>\n            </Tab>\n            <Tab label='採集行'>\n                <ReferenceField label=\"登録された採集行\" source=\"tour\" reference=\"tours/own-tours\" link=\"show\">\n                    <TextField source=\"title\"/>\n                </ReferenceField>\n            </Tab>\n            <Tab label='画像'>\n                <ImageField source=\"image1\" label=\"画像\"/>\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default SpecimenShow;",["247","248"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenList.js",["249","250","251","252","253","254","255","256","257","258","259","260","261","262","263","264","265","266","267","268","269","270","271","272"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    CloneButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    SearchInput,\n    Filter,\n    NumberInput,\n    DateInput,\n    BooleanField,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\nconst SpecimenListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst SpecimenFilter = props => (\n    <Filter {...props}>\n        <TextInput source=\"default_taxon_info__genus\" label=\"属(デフォルト分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"default_taxon_info__species\" label=\"種(デフォルト分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"default_taxon_info__subspecies\" label=\"亜種(デフォルト分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"default_taxon_info__japanese_name\" label=\"和名(デフォルト分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"default_taxon_info__subgenus\" label=\"亜属(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__scientific_name_author\" label=\"記載者(デフォルト分類情報)\" resettable/>\n        <NumberInput source=\"default_taxon_info__name_publishedin_year_min\" label=\"記載年の範囲(入力年以降)(デフォルト分類情報)\" resettable/>\n        <NumberInput source=\"default_taxon_info__name_publishedin_year_max\" label=\"記載年の範囲(入力年以前)(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__kingdom\" label=\"界(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__phylum\" label=\"門(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__class_name\" label=\"綱(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__order\" label=\"目(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__suborder\" label=\"亜目(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__family\" label=\"科(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__subfamily\" label=\"亜科(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__tribe\" label=\"族(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"default_taxon_info__subtribe\" label=\"亜族(デフォルト分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__genus\" label=\"属(カスタム分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"custom_taxon_info__species\" label=\"種(カスタム分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"custom_taxon_info__subspecies\" label=\"亜種(カスタム分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"custom_taxon_info__japanese_name\" label=\"和名(カスタム分類情報)\" alwaysOn resettable/>\n        <TextInput source=\"custom_taxon_info__subgenus\" label=\"亜属(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__scientific_name_author\" label=\"記載者(カスタム分類情報)\" resettable/>\n        <NumberInput source=\"custom_taxon_info__name_publishedin_year_min\" label=\"記載年の範囲(入力年以降)(カスタム分類情報)\" resettable/>\n        <NumberInput source=\"custom_taxon_info__name_publishedin_year_max\" label=\"記載年の範囲(入力年以前)(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__kingdom\" label=\"界(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__phylum\" label=\"門(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__class_name\" label=\"綱(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__order\" label=\"目(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__suborder\" label=\"亜目(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__family\" label=\"科(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__subfamily\" label=\"亜科(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__tribe\" label=\"族(カスタム分類情報)\" resettable/>\n        <TextInput source=\"custom_taxon_info__subtribe\" label=\"亜族(カスタム分類情報)\" resettable/>\n        <TextInput source=\"collect_point_info__country\" label=\"国名コード(ISO 3166-1)\" alwaysOn resettable/>\n        <TextInput source=\"collect_point_info__contient\" label=\"大陸\"  resettable/>\n        <TextInput source=\"collect_point_info__island_group\" label=\"島群\" resettable/>\n        <TextInput source=\"collect_point_info__island\" label=\"島\" alwaysOn resettable/>\n        <TextInput source=\"collect_point_info__state_provice\" label=\"県(州)\" alwaysOn resettable/>\n        <TextInput source=\"collect_point_info__county\" label=\"海外における群・区\" resettable/>\n        <TextInput source=\"collect_point_info__municipality\" label=\"市名以下の詳細地名\" alwaysOn resettable/>\n        <TextInput source=\"collect_point_info__verbatim_locality\" label=\"採集地の説明\" resettable/>\n        <TextInput source=\"collect_point_info__japanese_place_name\" label=\"日本語地名(ラベル用)\" alwaysOn resettable/>\n        <TextInput source=\"collect_point_info__japanese_place_name_detail\" label=\"日本語地名(詳細)\" resettable/>\n        <NumberInput source=\"longitude\" label=\"経度(指定座標から指定半径内にある地点を探すセット検索1/3)\" alwaysOn resettable/>\n        <NumberInput source=\"latitude\" label=\"緯度(指定座標から指定半径内にある地点を探すセット検索2/3)\" alwaysOn resettable/>\n        <NumberInput source=\"radius\" label=\"半径(指定座標から指定半径内にある地点を探すセット検索3/3)\" alwaysOn resettable/>\n        <NumberInput source=\"collect_point_info__longitude__range_min\" label=\"経度の範囲(入力値以上)\"  resettable/>\n        <NumberInput source=\"collect_point_info__longitude__range_max\" label=\"経度の範囲(入力値以下)\"  resettable/>\n        <NumberInput source=\"collect_point_info__latitude__range_min\" label=\"緯度の範囲(入力値以上)\"  resettable/>\n        <NumberInput source=\"collect_point_info__latitude__range_max\" label=\"緯度の範囲(入力値以下)\"  resettable/>\n        <NumberInput source=\"collect_point_info__coordinate_precision_min\" label=\"採集地の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"collect_point_info__coordinate_precision_max\" label=\"採集地の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"collect_point_info__minimum_elevation_min\" label=\"最低標高の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"collect_point_info__minimum_elevation_max\" label=\"最低標高の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"collect_point_info__maximum_elevation_min\" label=\"最高標高の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"collect_point_info__maximum_elevation_max\" label=\"最高標高の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"collect_point_info__minimum_depth_min\" label=\"水面からの最浅の距離の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"collect_point_info__minimum_depth_max\" label=\"水面からの最浅の距離の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"collect_point_info__maximum_depth_min\" label=\"水面からの最深の距離の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"collect_point_info__maximum_depth_max\" label=\"水面からの最深の距離(入力値以下)\" resettable/>\n        <TextInput label=\"採集行のタイトル\" source=\"tour__title\" resettable/>\n        <TextInput label=\"コレクション名\" source=\"collection_settings_info__collection_name\" resettable/>\n        <TextInput label=\"機関コード\" source=\"collection_settings_info__institution_code\" resettable/>\n        <TextInput source=\"collection_code\" label=\"標本ID\" resettable/>\n        <TextInput source=\"identified_by\" label=\"同定者\" resettable/>\n        <DateInput source=\"date_identified\" label=\"同定年月日\" resettable/>\n        <TextInput source=\"collecter\" label=\"採集者\" resettable/>\n        <TextInput source=\"year_min\" label=\"採集年の範囲(入力年以降)\" resettable/>\n        <TextInput source=\"year_max\" label=\"採集年の範囲(入力年以前)\" resettable/>\n        <TextInput source=\"month_min\" label=\"採集月の範囲(入力月以降)\" resettable/>\n        <TextInput source=\"month_max\" label=\"採集月の範囲(入力月以前)\" resettable/>\n        <TextInput source=\"day_min\" label=\"採集日の範囲(入力日以降)\" resettable/>\n        <TextInput source=\"day_max\" label=\"採集日の範囲(入力日以前)\" resettable/>\n        <TextInput source=\"sex\" label=\"性別\" resettable/>\n        <TextInput source=\"preparation_type\" label=\"標本の種類\" resettable/>\n        <TextInput source=\"disposition\" label=\"現在の標本の状況\" resettable/>\n        <TextInput source=\"sampling_protocol\" label=\"採集方法\" resettable/>\n        <TextInput source=\"sampling_effort\" label=\"採集中の作業メモ\" resettable/>\n        <TextInput source=\"lifestage\" label=\"ライフステージ\" resettable/>\n        <TextInput source=\"establishment_means\" label=\"生成プロセス\" resettable/>\n        <TextInput source=\"rights\" label=\"ライセンス\" resettable/>\n        <TextInput source=\"note\" label=\"備考\" resettable/>\n        <DateInput source=\"date_last_modified\" label=\"作成日\" resettable/>\n    </Filter>\n);\n\nconst SpecimenList = props => (\n    <List {...props} title=\"標本\" actions={<SpecimenListActions/>} filters={<SpecimenFilter />} perPage={20}\n        sort={{ field: 'date_last_modified', order: 'DESC' }}>\n        <CustomizableDatagrid defaultColumns={['institution_code', 'collection_code',\n                                               'genus', 'species', 'year', 'month', 'day',\n                                               'state_provice', 'municipality', 'japanese_place_name']}>\n            <TextField source=\"institution_code\" label=\"機関コード\"/>\n            <TextField source=\"collection_code\" label=\"標本ID\"/>\n            <TextField source=\"genus\" label=\"属\"/>\n            <TextField source=\"subgenus\" label=\"亜属\"/>\n            <TextField source=\"species\" label=\"種\"/>\n            <TextField source=\"subspecies\" label=\"亜種\"/>\n            <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n            <TextField source=\"name_publishedin_year\" label=\"記載年\"/>\n            <TextField source=\"japanese_name\" label=\"和名\"/>\n            <TextField source=\"kingdom\" label=\"界\" />\n            <TextField source=\"phylum\" label=\"門\" />\n            <TextField source=\"class_name\" label=\"綱\" />\n            <TextField source=\"order\" label=\"目\" />\n            <TextField source=\"suborder\" label=\"亜目\" />\n            <TextField source=\"family\" label=\"科\" />\n            <TextField source=\"subfamily\" label=\"亜科\" />\n            <TextField source=\"tribe\" label=\"族\" />\n            <TextField source=\"subtribe\" label=\"亜族\" />\n            <TextField source=\"country\" label=\"国名コード(ISO 3166-1)\"/>\n            <TextField source=\"contient\" label=\"大陸\"/>\n            <TextField source=\"island_group\" label=\"島群\"/>\n            <TextField source=\"island\" label=\"島\"/>\n            <TextField source=\"state_provice\" label=\"県(州)\"/>\n            <TextField source=\"county\" label=\"海外における群・区\"/>\n            <TextField source=\"municipality\" label=\"市名以下の詳細地名\"/>\n            <TextField source=\"verbatim_locality\" label=\"採集地の説明\"/>\n            <TextField source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\"/>\n            <TextField source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\"/>\n            <NumberField source=\"longitude\" label=\"経度\"/>\n            <NumberField source=\"latitude\" label=\"緯度\"/>\n            <NumberField source=\"coordinate_precision\" label=\"採集地の範囲\"/>\n            <NumberField source=\"minimum_elevation\" label=\"最低標高\"/>\n            <NumberField source=\"maximum_elevation\" label=\"最高標高\"/>\n            <NumberField source=\"minimum_depth\" label=\"水面からの最浅の距離\"/>\n            <NumberField source=\"maximum_depth\" label=\"水面からの最深の距離\"/>\n            <TextField source=\"title\" label=\"採集行のタイトル\"/>\n            <TextField source=\"collection_name\" label=\"コレクション名\"/>\n            <TextField source=\"identified_by\" label=\"同定者\"/>\n            <DateField source=\"date_identified\" label=\"同定年月日\"/>\n            <TextField source=\"collecter\" label=\"採集者\"/>\n            <TextField source=\"year\" label=\"採集年\"/>\n            <TextField source=\"month\" label=\"採集月\"/>\n            <TextField source=\"day\" label=\"採集日\"/>\n            <TextField source=\"sex\" label=\"性別\"/>\n            <TextField source=\"preparation_type\" label=\"標本の種類\"/>\n            <TextField source=\"disposition\" label=\"現在の標本の状況\"/>\n            <TextField source=\"sampling_protocol\" label=\"採集方法\"/>\n            <TextField source=\"sampling_effort\" label=\"採集中の作業メモ\"/>\n            <TextField source=\"lifestage\" label=\"ライフステージ\"/>\n            <TextField source=\"establishment_means\" label=\"生成プロセス\"/>\n            <TextField source=\"rights\" label=\"ライセンス\"/>\n            <TextField source=\"note\" label=\"備考\" />\n            <DateField source=\"date_last_modified\" label=\"作成日\"/>\n            <EditButton label=\"編集\" />\n            <CloneButton label=\"これをベースに作成\"/>\n            <ShowButton label=\"詳細\"/>\n        </CustomizableDatagrid>\n    </List>\n);\n\nexport default SpecimenList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/index.js",["273"],"import SpecimenList from './SpecimenList';\nimport SpecimenShow from './SpecimenShow';\nimport SpecimenEdit from './SpecimenEdit';\nimport SpecimenCreate from './SpecimenCreate';\n\nexport default {\n  list: SpecimenList,\n  show: SpecimenShow,\n  edit: SpecimenEdit,\n  create: SpecimenCreate,\n};\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonList.js",["274","275","276","277","278","279","280","281","282","283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    CloneButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    SearchInput,\n    Filter,\n    NumberInput,\n    DateInput,\n    BooleanField,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\nconst CustomTaxonListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst CustomTaxonFilter = props => (\n    <Filter {...props}>\n        <TextInput source=\"genus\" label=\"属\" alwaysOn resettable/>\n        <TextInput source=\"species\" label=\"種\" alwaysOn resettable/>\n        <TextInput source=\"subspecies\" label=\"亜種\" alwaysOn resettable/>\n        <TextInput source=\"japanese_name\" label=\"和名\" alwaysOn resettable/>\n        <TextInput source=\"subgenus\" label=\"亜属\" resettable/>\n        <TextInput source=\"scientific_name_author\" label=\"記載者\" resettable/>\n        <NumberInput source=\"name_publishedin_year_min\" label=\"記載年の範囲(入力年以降)\" resettable/>\n        <NumberInput source=\"name_publishedin_year_max\" label=\"記載年の範囲(入力年以前)\" resettable/>\n        <TextInput source=\"kingdom\" label=\"界\" resettable/>\n        <TextInput source=\"phylum\" label=\"門\" resettable/>\n        <TextInput source=\"class_name\" label=\"綱\" resettable/>\n        <TextInput source=\"order\" label=\"目\" resettable/>\n        <TextInput source=\"suborder\" label=\"亜目\" resettable/>\n        <TextInput source=\"family\" label=\"科\" resettable/>\n        <TextInput source=\"subfamily\" label=\"亜科\" resettable/>\n        <TextInput source=\"tribe\" label=\"族\" resettable/>\n        <TextInput source=\"subtribe\" label=\"亜族\" resettable/>\n        <TextInput source=\"distribution\" label=\"分布\" resettable/>\n        <TextInput source=\"note\" label=\"備考\" resettable/>\n        <DateInput source=\"created_at\" label=\"作成日\" resettable/>\n    </Filter>\n);\n\nconst CustomTaxonList = props => (\n    <List {...props} title=\"カスタム分類情報\" actions={<CustomTaxonListActions/>} filters={<CustomTaxonFilter />} perPage={20}\n        sort={{ field: 'genus', order: 'DESC' }}>\n        <CustomizableDatagrid defaultColumns={['genus', 'subgenus', 'species', 'subspecies', 'scientific_name_author',\n                                               'name_publishedin_year', 'japanese_name']}>\n            <TextField source=\"genus\" label=\"属\"/>\n            <TextField source=\"subgenus\" label=\"亜属\"/>\n            <TextField source=\"species\" label=\"種\"/>\n            <TextField source=\"subspecies\" label=\"亜種\"/>\n            <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n            <TextField source=\"name_publishedin_year\" label=\"記載年\"/>\n            <TextField source=\"japanese_name\" label=\"和名\"/>\n            <TextField source=\"kingdom\" label=\"界\" />\n            <TextField source=\"phylum\" label=\"門\" />\n            <TextField source=\"class_name\" label=\"綱\" />\n            <TextField source=\"order\" label=\"目\" />\n            <TextField source=\"suborder\" label=\"亜目\" />\n            <TextField source=\"family\" label=\"科\" />\n            <TextField source=\"subfamily\" label=\"亜科\" />\n            <TextField source=\"tribe\" label=\"族\" />\n            <TextField source=\"subtribe\" label=\"亜族\" />\n            <TextField source=\"distribution\" label=\"分布\" />\n            <TextField source=\"note\" label=\"備考\" />\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <EditButton label=\"編集\" />\n            <CloneButton label=\"これをベースに作成\"/>\n            <ShowButton label=\"詳細\"/>\n        </CustomizableDatagrid>\n    </List>\n);\n\nexport default CustomTaxonList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonShow.js",["299","300","301","302","303"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n} from 'react-admin';\n\n\nconst CustomTaxonShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst CustomTaxonShow = props => (\n    <Show actions={<CustomTaxonShowActions/>} {...props} title=\"カスタム分類情報\">\n        <TabbedShowLayout>\n            <Tab label='下位分類・記載者(年)・和名'>\n                <TextField source=\"genus\" label=\"属\"/>\n                <TextField source=\"subgenus\" label=\"亜属\"/>\n                <TextField source=\"species\" label=\"種\"/>\n                <TextField source=\"subspecies\" label=\"亜種\"/>\n                <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n                <TextField source=\"name_publishedin_year\" label=\"記載年\"/>\n                <TextField source=\"japanese_name\" label=\"和名\"/>\n            </Tab>\n            <Tab label='上位分類'>\n                <TextField source=\"kingdom\" label=\"界\" />\n                <TextField source=\"phylum\" label=\"門\" />\n                <TextField source=\"class_name\" label=\"綱\" />\n                <TextField source=\"order\" label=\"目\" />\n                <TextField source=\"suborder\" label=\"亜目\" />\n                <TextField source=\"family\" label=\"科\" />\n                <TextField source=\"subfamily\" label=\"亜科\" />\n                <TextField source=\"tribe\" label=\"族\" />\n                <TextField source=\"subtribe\" label=\"亜族\" />\n            </Tab>\n            <Tab label='分布・備考'>\n                <TextField source=\"distribution\" label=\"分布\" />\n                <TextField source=\"note\" label=\"備考\" />\n            </Tab>\n            <Tab label='管理情報'>\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='画像'>\n                <ImageField source=\"image1\" label=\"画像\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default CustomTaxonShow;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonEdit.js",["304","305","306","307","308","309","310","311","312","313","314"],"import * as React from \"react\";\nimport {\n    TopToolbar,\n    TabbedForm,\n    FormTab,\n    Edit,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    EditButton,\n    ShowButton,\n    ListButton,\n    ImageInput,\n    ImageField,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst identity = value => (value)\n\nconst CustomTaxonEditActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ShowButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateCamelCase = [regex(/^[A-Z][a-z]+$/, '先頭のみ大文字の半角英字にしてください'), minLength(0), maxLength(30)]\nconst validateLowerCase = [regex(/^[a-z]+$/, '全て小文字の半角英字にしてください'), minLength(0), maxLength(30)]\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst CustomTaxonEdit = (props) => (\n    <Edit actions={<CustomTaxonEditActions/>} {...props} title=\"カスタム分類情報\">\n        <TabbedForm>\n            <FormTab label=\"下位分類・記載者(年)・和名\">\n                <TextInput source=\"genus\" label=\"属\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"subgenus\" label=\"亜属\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"species\" label=\"種\" helperText='全て小文字の半角英字30字以内' parse={identity} resettable validate={validateLowerCase}/>\n                <TextInput source=\"subspecies\" label=\"亜種\" helperText='全て小文字の半角英字30字以内' parse={identity} resettable validate={validateLowerCase}/>\n                <TextInput source=\"scientific_name_author\" label=\"記載者\" helperText='50字以内' parse={identity} resettable validate={[minLength(0), maxLength(50)]}/>\n                <NumberInput source=\"name_publishedin_year\" label=\"記載年\" helperText='半角数字4桁(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(9999)]}/>\n                <TextInput source=\"japanese_name\" label=\"和名\" helperText='30字以内' parse={identity} resettable validate={[minLength(0), maxLength(30)]}/>\n            </FormTab>\n            <FormTab label=\"上位分類\">\n                <TextInput source=\"kingdom\" label=\"界\" defaultValue=\"Animalia\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"phylum\" label=\"門\" defaultValue=\"Arthropoda\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"class_name\" label=\"綱\" defaultValue=\"Insecta\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"order\" label=\"目\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"suborder\" label=\"亜目\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"family\" label=\"科\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"subfamily\" label=\"亜科\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"tribe\" label=\"族\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n                <TextInput source=\"subtribe\" label=\"亜族\" helperText='先頭のみ大文字の半角英字30字以内' parse={identity} resettable validate={validateCamelCase}/>\n            </FormTab>\n            <FormTab label=\"分布・備考\">\n                <TextInput multiline source=\"distribution\" label=\"分布\" helperText='100字以内 改行可' parse={identity} resettable validate={minLength(0), maxLength(100)}/>\n                <TextInput multiline source=\"note\" label=\"備考\" helperText='200字以内 改行可' parse={identity} resettable validate={minLength(0), maxLength(200)}/>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default CustomTaxonEdit;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/CustomTaxonCreate.js",["315","316","317","318","319","320","321","322","323","324"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst CustomTaxonCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateCamelCase = [regex(/^[A-Z][a-z]+$/, '先頭のみ大文字の半角英字にしてください'), minLength(0), maxLength(30)]\nconst validateLowerCase = [regex(/^[a-z]+$/, '全て小文字の半角英字にしてください'), minLength(0), maxLength(30)]\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst CustomTaxonCreate = (props) => (\n    <Create actions={<CustomTaxonCreateActions/>} {...props} title=\"カスタム分類情報\">\n        <TabbedForm>\n            <FormTab label=\"下位分類・記載者(年)・和名\">\n                <TextInput source=\"genus\" label=\"属\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subgenus\" label=\"亜属\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"species\" label=\"種\" helperText='全て小文字の半角英字30字以内' resettable validate={validateLowerCase}/>\n                <TextInput source=\"subspecies\" label=\"亜種\" helperText='全て小文字の半角英字30字以内' resettable validate={validateLowerCase}/>\n                <TextInput source=\"scientific_name_author\" label=\"記載者\" helperText='50字以内' resettable validate={[minLength(0), maxLength(50)]}/>\n                <NumberInput source=\"name_publishedin_year\" label=\"記載年\" helperText='半角数字4桁(不明な場合0を入力してください)' validate={[minValue(0), maxValue(9999)]}/>\n                <TextInput source=\"japanese_name\" label=\"和名\" helperText='30字以内' resettable validate={[minLength(0), maxLength(30)]}/>\n            </FormTab>\n            <FormTab label=\"上位分類\">\n                <TextInput source=\"kingdom\" label=\"界\" defaultValue=\"Animalia\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"phylum\" label=\"門\" defaultValue=\"Arthropoda\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"class_name\" label=\"綱\" defaultValue=\"Insecta\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"order\" label=\"目\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"suborder\" label=\"亜目\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"family\" label=\"科\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subfamily\" label=\"亜科\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"tribe\" label=\"族\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subtribe\" label=\"亜族\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n            </FormTab>\n            <FormTab label=\"分布・備考\">\n                <TextInput multiline source=\"distribution\" label=\"分布\" helperText='100字以内 改行可' resettable validate={minLength(0), maxLength(100)}/>\n                <TextInput multiline source=\"note\" label=\"備考\" helperText='200字以内 改行可' resettable validate={minLength(0), maxLength(200)}/>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default CustomTaxonCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonList.js",["325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341","342","343","344","345","346","347","348","349"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    CloneButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    NumberInput,\n    Filter,\n    DateInput,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\n\nconst DefaultTaxonListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your Default actions */}\n        </TopToolbar>\n    );\n};\n\nconst DefaultTaxonFilter = props => (\n    <Filter {...props}>\n        <TextInput source=\"genus\" label=\"属\" alwaysOn />\n        <TextInput source=\"species\" label=\"種\" alwaysOn/>\n        <TextInput source=\"subspecies\" label=\"亜種\" alwaysOn/>\n        <TextInput source=\"japanese_name\" label=\"和名\" alwaysOn/>\n        <TextInput source=\"subgenus\" label=\"亜属\" resettable/>\n        <TextInput source=\"scientific_name_author\" label=\"記載者\" resettable/>\n        <NumberInput source=\"name_publishedin_year_min\" label=\"記載年の範囲(入力年以降)\" resettable/>\n        <NumberInput source=\"name_publishedin_year_max\" label=\"記載年の範囲(入力年以前)\" resettable/>\n        <TextInput source=\"kingdom\" label=\"界\" resettable/>\n        <TextInput source=\"phylum\" label=\"門\" resettable/>\n        <TextInput source=\"class_name\" label=\"綱\" resettable/>\n        <TextInput source=\"order\" label=\"目\" resettable/>\n        <TextInput source=\"suborder\" label=\"亜目\" resettable/>\n        <TextInput source=\"family\" label=\"科\" resettable/>\n        <TextInput source=\"subfamily\" label=\"亜科\" resettable/>\n        <TextInput source=\"tribe\" label=\"族\" resettable/>\n        <TextInput source=\"subtribe\" label=\"亜族\" resettable/>\n        <TextInput source=\"distribution\" label=\"分布\" resettable/>\n        <TextInput source=\"note\" label=\"備考\" resettable/>\n        <DateInput source=\"created_at\" label=\"作成日\"/>\n    </Filter>\n);\n\nconst DefaultTaxonList = props => (\n    <List {...props} title=\"デフォルト分類情報\" actions={<DefaultTaxonListActions/>} filters={<DefaultTaxonFilter />} perPage={20}\n        sort={{ field: 'genus', order: 'DESC' }}>\n        <CustomizableDatagrid defaultColumns={['genus', 'subgenus', 'species', 'subspecies', 'scientific_name_author',\n                                               'name_publishedin_year', 'japanese_name']}>\n            <TextField source=\"genus\" label=\"属\"/>\n            <TextField source=\"subgenus\" label=\"亜属\"/>\n            <TextField source=\"species\" label=\"種\"/>\n            <TextField source=\"subspecies\" label=\"亜種\"/>\n            <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n            <NumberField source=\"name_publishedin_year\" label=\"記載年\"/>\n            <TextField source=\"japanese_name\" label=\"和名\"/>\n            <TextField source=\"kingdom\" label=\"界\" />\n            <TextField source=\"phylum\" label=\"門\" />\n            <TextField source=\"class_name\" label=\"綱\" />\n            <TextField source=\"order\" label=\"目\" />\n            <TextField source=\"suborder\" label=\"亜目\" />\n            <TextField source=\"family\" label=\"科\" />\n            <TextField source=\"subfamily\" label=\"亜科\" />\n            <TextField source=\"tribe\" label=\"族\" />\n            <TextField source=\"subtribe\" label=\"亜族\" />\n            <TextField source=\"distribution\" label=\"分布\" />\n            <TextField source=\"note\" label=\"備考\" />\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <CloneButton label=\"これをベースにカスタム分類情報を作成\"/>\n            <ShowButton label=\"詳細\"/>\n        </CustomizableDatagrid>\n    </List>\n);\n\nexport default DefaultTaxonList;",["350","351"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/index.js",["352"],"import DefaultTaxonList from './DefaultTaxonList';\nimport DefaultTaxonShow from './DefaultTaxonShow';\nimport DefaultTaxonCreate from './DefaultTaxonCreate';\n\nexport default {\n  list: DefaultTaxonList,\n  show: DefaultTaxonShow,\n  create: DefaultTaxonCreate,\n};\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonShow.js",["353","354","355","356","357","358"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n} from 'react-admin';\n\n\nconst DefaultTaxonShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst DefaultTaxonShow = props => (\n    <Show actions={<DefaultTaxonShowActions/>} {...props} title=\"デフォルト分類情報\">\n        <TabbedShowLayout>\n            <Tab label='下位分類・記載者(年)・和名'>\n                <TextField source=\"genus\" label=\"属\"/>\n                <TextField source=\"subgenus\" label=\"亜属\"/>\n                <TextField source=\"species\" label=\"種\"/>\n                <TextField source=\"subspecies\" label=\"亜種\"/>\n                <TextField source=\"scientific_name_author\" label=\"記載者\"/>\n                <TextField source=\"name_publishedin_year\" label=\"記載年\"/>\n                <TextField source=\"japanese_name\" label=\"和名\"/>\n            </Tab>\n            <Tab label='上位分類'>\n                <TextField source=\"kingdom\" label=\"界\" />\n                <TextField source=\"phylum\" label=\"門\" />\n                <TextField source=\"class_name\" label=\"綱\" />\n                <TextField source=\"order\" label=\"目\" />\n                <TextField source=\"suborder\" label=\"亜目\" />\n                <TextField source=\"family\" label=\"科\" />\n                <TextField source=\"subfamily\" label=\"亜科\" />\n                <TextField source=\"tribe\" label=\"族\" />\n                <TextField source=\"subtribe\" label=\"亜族\" />\n            </Tab>\n            <Tab label='分布・備考'>\n                <TextField source=\"distribution\" label=\"分布\" />\n                <TextField source=\"note\" label=\"備考\" />\n            </Tab>\n            <Tab label='管理情報'>\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='画像'>\n                <ImageField source=\"image1\" label=\"画像1\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default DefaultTaxonShow;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/customTaxa/index.js",["359"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/addUploadFeature.js",["360","361","362","363","364","365","366","367","368","369","370","371","372","373","374","375"],"const addUploadCapabilities = dataProvider => ({\n    ...dataProvider,\n    create: (resource, params) => {\n        if (resource == 'user-profiles/own-user-profiles' || resource == 'label-maker/own-labels'\n            || resource == 'collection-settings/own-collection-settings') {\n            return dataProvider.create(resource, params);\n        }\n\n        if (resource == 'specimens/own-specimens') {\n            const image1 = params.data.image1;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.create(resource, {\n                            ...params,\n                            data: {\n                                custom_taxon_info: params.data.custom_taxon_info,\n                                default_taxon_info: params.data.default_taxon_info,\n                                collection_settings_info: params.data.collection_settings_info,\n                                collect_point_info: params.data.collect_point_info,\n                                tour: params.data.tour,\n                                collection_code: params.data.collection_code,\n                                date_identified: params.data.date_identified,\n                                year: params.data.year,\n                                month: params.data.month,\n                                day: params.data.day,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.create(resource, {\n                ...params,\n                data: {\n                    custom_taxon_info: params.data.custom_taxon_info,\n                    default_taxon_info: params.data.default_taxon_info,\n                    collection_settings_info: params.data.collection_settings_info,\n                    collect_point_info: params.data.collect_point_info,\n                    tour: params.data.tour,\n                    collection_code: params.data.collection_code,\n                    date_identified: params.data.date_identified,\n                    year: params.data.year,\n                    month: params.data.month,\n                    day: params.data.day,\n                }})\n        };\n\n        if (resource == 'taxa/shared-taxa') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.create(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.create(resource, {\n                ...params,\n                data: {\n                    ...newData\n                }})\n        };\n        \n        if (resource == 'taxa/own-taxa') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.is_private;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.create(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.create(resource, {\n                ...params,\n                data: {\n                    ...newData\n                }})\n        };\n\n        if (resource == 'tours/own-tours') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.track;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.create(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.create(resource, {\n                ...params,\n                data: {\n                    ...newData\n                }})\n        };\n\n        if (resource == 'collect-points/own-collect-points') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.longitude;\n            delete newData.latitude;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.create(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.create(resource, {\n                ...params,\n                data: {\n                    ...newData,\n                }})\n        };\n    },\n\n    update: (resource, params) => {\n        if (resource == 'user-profiles/own-user-profiles' || resource == 'label-maker/own-labels'\n            || resource == 'collection-settings/own-collection-settings') {\n            return dataProvider.update(resource, params);\n        };\n\n        if (resource == 'taxa/own-taxa') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.is_private;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.update(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.update(resource, {\n                ...params,\n                data: {\n                    ...newData\n                }})\n        };\n\n        if (resource == 'tours/own-tours') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.track;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.update(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.update(resource, {\n                ...params,\n                data: {\n                    ...newData\n                }})\n        };\n\n        if (resource == 'collect-points/own-collect-points') {\n            const image1 = params.data.image1;\n            const newData = params.data;\n            delete newData.id;\n            delete newData.created_at;\n            delete newData.longitude;\n            delete newData.latitude;\n            delete newData.image1;\n            delete newData.image2;\n            delete newData.image3;\n            delete newData.image4;\n            delete newData.image5;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.update(resource, {\n                            ...params,\n                            data: {\n                                ...newData,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.update(resource, {\n                ...params,\n                data: {\n                    ...newData,\n                }})\n        };\n\n        if (resource == 'specimens/own-specimens') {\n            const image1 = params.data.image1;\n            if (!(image1 == null)) {\n                if (!image1.rawFile instanceof File){\n                    return Promise.reject('Error: Not a file...');\n                };\n                if (image1.rawFile instanceof File){\n                    return Promise.resolve(convertFileToBase64(image1)\n                    .then( (picture64) => ({\n                            src: picture64,\n                            title: `${params.data.title}`,\n                        }))\n                    )\n                    .then(transformedNewPicture =>\n                        dataProvider.update(resource, {\n                            ...params,\n                            data: {\n                                custom_taxon_info: params.data.custom_taxon_info,\n                                default_taxon_info: params.data.default_taxon_info,\n                                collection_settings_info: params.data.collection_settings_info,\n                                collect_point_info: params.data.collect_point_info,\n                                tour: params.data.tour,\n                                collection_code: params.data.collection_code,\n                                date_identified: params.data.date_identified,\n                                year: params.data.year,\n                                month: params.data.month,\n                                day: params.data.day,\n                                image1: transformedNewPicture['src']\n                            },\n                        })\n                    );\n                };\n            }\n            return dataProvider.update(resource, {\n                ...params,\n                data: {\n                    custom_taxon_info: params.data.custom_taxon_info,\n                    default_taxon_info: params.data.default_taxon_info,\n                    collection_settings_info: params.data.collection_settings_info,\n                    collect_point_info: params.data.collect_point_info,\n                    tour: params.data.tour,\n                    collection_code: params.data.collection_code,\n                    date_identified: params.data.date_identified,\n                    year: params.data.year,\n                    month: params.data.month,\n                    day: params.data.day,\n                }})\n        };\n    },\n});\n\n\nconst convertFileToBase64 = file =>\n    new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.readAsDataURL(file.rawFile);\n\n        reader.onload = () => resolve(reader.result);\n        reader.onerror = reject;\n    });\n\nconst convertFileToBase64Simple = file => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file.rawFile);\n    return reader.result;\n};\n    \nexport default addUploadCapabilities;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourList.js",["376","377","378","379","380","381","382","383","384","385","386","387","388","389","390","391","392","393","394","395","396","397"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    Filter,\n    DateInput,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\n\nconst TourListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst TourFilter = props => (\n    <Filter {...props}>\n        <TextInput label=\"タイトル\" source=\"title\" alwaysOn resettable/>\n        <DateInput label=\"開始日の範囲(入力年以降)\" source=\"start_date_after\" alwaysOn resettable/>\n        <DateInput label=\"開始日の範囲(入力年以前)\" source=\"start_date_before\" alwaysOn resettable/>\n        <DateInput label=\"終了日の範囲(入力年以降)\" source=\"end_date_after\" alwaysOn resettable/>\n        <DateInput label=\"終了日の範囲(入力年以前)\" source=\"end_date_before\" alwaysOn resettable/>\n        <DateInput label=\"作成日\" source=\"created_at\" alwaysOn resettable/> \n    </Filter>\n);\n\nconst TourList = props => (\n    <List {...props} title=\"採集行\" actions={<TourListActions/>} filters={<TourFilter />} perPage={20}\n        sort={{ field: 'start_date', order: 'DESC' }}>\n        <Datagrid >\n            <TextField source=\"title\" label=\"タイトル\"/>\n            <DateField source=\"start_date\" label=\"開始日\"/>\n            <DateField source=\"end_date\" label=\"終了日\"/>\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <EditButton label=\"編集\"/>\n            <ShowButton label=\"詳細\"/>\n        </Datagrid>\n    </List>\n);\n\nexport default TourList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/utils/drfProvider.js",["398","399","400","401","402","403","404","405","406","407"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourEdit.js",["408","409","410","411","412","413","414","415","416","417","418","419","420"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointList.js",["421","422","423","424","425","426","427","428","429","430","431","432","433","434","435","436","437","438","439","440","441","442","443","444"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    CloneButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    SearchInput,\n    Filter,\n    NumberInput,\n    DateInput,\n    BooleanField,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\nimport CustomizableDatagrid from 'ra-customizable-datagrid';\n\n\nconst CollectPointListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst CollectPointFilter = props => (\n    <Filter {...props}>\n        <TextInput source=\"country\" label=\"国名コード(ISO 3166-1)\" alwaysOn resettable/>\n        <TextInput source=\"contient\" label=\"大陸\"  resettable/>\n        <TextInput source=\"island_group\" label=\"島群\" resettable/>\n        <TextInput source=\"island\" label=\"島\" alwaysOn resettable/>\n        <TextInput source=\"state_provice\" label=\"県(州)\" alwaysOn resettable/>\n        <TextInput source=\"county\" label=\"海外における群・区\" resettable/>\n        <TextInput source=\"municipality\" label=\"市名以下の詳細地名\" alwaysOn resettable/>\n        <TextInput source=\"verbatim_locality\" label=\"採集地の説明\" resettable/>\n        <TextInput source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\" alwaysOn resettable/>\n        <TextInput source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\" resettable/>\n        <NumberInput source=\"longitude\" label=\"経度(指定座標から指定半径内にある地点を探すセット検索1/3)\" alwaysOn resettable/>\n        <NumberInput source=\"latitude\" label=\"緯度(指定座標から指定半径内にある地点を探すセット検索2/3)\" alwaysOn resettable/>\n        <NumberInput source=\"radius\" label=\"半径(指定座標から指定半径内にある地点を探すセット検索3/3)\" alwaysOn resettable/>\n        <NumberInput source=\"longitude__range_min\" label=\"経度の範囲(入力値以上)\"  resettable/>\n        <NumberInput source=\"longitude__range_max\" label=\"経度の範囲(入力値以下)\"  resettable/>\n        <NumberInput source=\"latitude__range_min\" label=\"緯度の範囲(入力値以上)\"  resettable/>\n        <NumberInput source=\"latitude__range_max\" label=\"緯度の範囲(入力値以下)\"  resettable/>\n        <NumberInput source=\"coordinate_precision\" label=\"採集地の範囲\" resettable/>\n        <NumberInput source=\"minimum_elevation_min\" label=\"最低標高の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"minimum_elevation_max\" label=\"最低標高の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"maximum_elevation_min\" label=\"最高標高の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"maximum_elevation_max\" label=\"最高標高の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"minimum_depth_min\" label=\"水面からの最浅の距離の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"minimum_depth_max\" label=\"水面からの最浅の距離の範囲(入力値以下)\" resettable/>\n        <NumberInput source=\"maximum_depth_min\" label=\"水面からの最深の距離の範囲(入力値以上)\" resettable/>\n        <NumberInput source=\"maximum_depth_max\" label=\"水面からの最深の距離(入力値以下)\" resettable/>\n        <DateInput source=\"created_at\" label=\"作成日\" resettable/>\n    </Filter>\n);\n\nconst CollectPointList = props => (\n    <List {...props} title=\"採集地点\" actions={<CollectPointListActions/>} filters={<CollectPointFilter />} perPage={20}\n        sort={{ field: 'created_at', order: 'DESC' }}>\n        <CustomizableDatagrid defaultColumns={['country', 'island', 'state_provice', 'municipality', 'japanese_place_name',\n                                               'longitude', 'latitude']}>\n            <TextField source=\"country\" label=\"国名コード(ISO 3166-1)\"/>\n            <TextField source=\"contient\" label=\"大陸\"/>\n            <TextField source=\"island_group\" label=\"島群\"/>\n            <TextField source=\"island\" label=\"島\"/>\n            <TextField source=\"state_provice\" label=\"県(州)\"/>\n            <TextField source=\"county\" label=\"海外における群・区\"/>\n            <TextField source=\"municipality\" label=\"市名以下の詳細地名\"/>\n            <TextField source=\"verbatim_locality\" label=\"採集地の説明\"/>\n            <TextField source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\"/>\n            <TextField source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\"/>\n            <NumberField source=\"longitude\" label=\"経度\"/>\n            <NumberField source=\"latitude\" label=\"緯度\"/>\n            <NumberField source=\"coordinate_precision\" label=\"採集地の範囲\"/>\n            <NumberField source=\"minimum_elevation\" label=\"最低標高\"/>\n            <NumberField source=\"maximum_elevation\" label=\"最高標高\"/>\n            <NumberField source=\"minimum_depth\" label=\"水面からの最浅の距離\"/>\n            <NumberField source=\"maximum_depth\" label=\"水面からの最深の距離\"/>\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <EditButton label=\"編集\" />\n            <CloneButton label=\"これをベースに作成\"/>\n            <ShowButton label=\"詳細\"/>\n        </CustomizableDatagrid>\n    </List>\n);\n\nexport default CollectPointList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/index.js",["445"],"import CollectPointList from './CollectPointList';\nimport CollectPointCreate from './CollectPointCreate';\nimport CollectPointEdit from './CollectPointEdit';\nimport CollectPointShow from './CollectPointShow';\n\nexport default {\n  list: CollectPointList,\n  create: CollectPointCreate,\n  edit: CollectPointEdit,\n  show: CollectPointShow,\n};\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointCreate.js",["446","447","448","449","450","451","452","453","454","455","456"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    SelectArrayInput,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\nimport { GMapInput } from '@fusionworks/ra-google-maps-input';\n\n\n\nconst CollectPointCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateASCII = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(30)]\nconst validateASCIIforContient = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(20)]\nconst validateASCIIforIsland = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(24)]\nconst validateASCIIforMunicipality = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(50)]\n\n\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst CollectPointCreate = (props) => (\n    <Create actions={<CollectPointCreateActions/>} {...props} title=\"採集地点\">\n        <TabbedForm>\n            <FormTab label=\"地名情報\">\n                <AutocompleteInput source=\"country\" label=\"国名コード(ISO 3166-1)\" helperText=\"ISO 3166-1準拠の半角英字2字の国名コード\" resettable\n                choices={[\n                    { id: 'JP', name: '日本' },\n                ]}/>\n                <TextInput source=\"contient\" label=\"大陸\" helperText=\"半角英数記号20字以内\" resettable validate={validateASCIIforContient}/>\n                <TextInput source=\"island_group\" label=\"島群\" helperText=\"半角英数記号30字以内\" resettable validate={validateASCII}/>\n                <TextInput source=\"island\" label=\"島\" helperText=\"半角英数記号24字以内\" resettable validate={validateASCIIforIsland}/>\n                <TextInput source=\"state_provice\" label=\"県(州)\" helperText=\"半角英数記号30字以内\" resettable validate={validateASCII}/>\n                <TextInput source=\"county\" label=\"海外における群・区\" helperText=\"半角英数記号30字以内\" resettable validate={validateASCII}/>\n                <TextInput source=\"municipality\" label=\"市名以下の詳細地名\" helperText=\"半角英数記号50字以内 大地名から順にカンマ区切り\" resettable validate={validateASCIIforMunicipality}/>\n                <TextInput multiple source=\"verbatim_locality\" label=\"採集地の説明\" helperText=\"200字以内 改行可\" resettable validate={[minLength(0), maxLength(200)]}/>\n                <TextInput source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\" helperText=\"14字以内\" resettable validate={[minLength(0), maxLength(14)]}/>\n                <TextInput source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\" helperText=\"50字以内\" resettable validate={[minLength(0), maxLength(50)]}/>\n            </FormTab>\n            <FormTab label=\"緯度・経度・標高・水深\">\n                <NumberInput source=\"location.longitude\" label=\"経度\" helperText=\"半角数字 小数点以下6桁まで可\" resettable/>\n                <NumberInput source=\"location.latitude\" label=\"緯度\" helperText=\"半角数字 小数点以下6桁まで可\" resettable/>\n                <NumberInput source=\"coordinate_precision\" label=\"採集地の範囲(m)\" resettable/>\n                <NumberInput source=\"minimum_elevation\" label=\"最低標高\" resettable/>\n                <NumberInput source=\"maximum_elevation\" label=\"最高標高\" resettable/>\n                <NumberInput source=\"minimum_depth\" label=\"水面からの最浅の距離\" resettable/>\n                <NumberInput source=\"maximum_depth\" label=\"水面からの最深の距離\" resettable/>\n            </FormTab>\n            <FormTab label=\"管理情報\">\n                <ReferenceArrayInput source=\"tour\" reference=\"tours/own-tours\" label=\"所属する採集行\">\n                    <SelectArrayInput optionText=\"title\" />\n                </ReferenceArrayInput>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default CollectPointCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/index.js",["457"],"import TourList from './TourList';\nimport TourShow from './TourShow';\nimport TourEdit from './TourEdit';\nimport TourCreate from './TourCreate';\n\nexport default {\n  list: TourList,\n  show: TourShow,\n  edit: TourEdit,\n  create: TourCreate,\n};\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourShow.js",["458","459","460","461","462"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n} from 'react-admin';\n\n\nconst TourShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst TourShow = props => (\n    <Show actions={<TourShowActions/>} {...props} title=\"採集行\">\n        <TabbedShowLayout>\n            <Tab label='基本情報'>\n                <TextField source=\"title\" label=\"タイトル\"/>\n                <DateField source=\"start_date\" label=\"開始日\"/>\n                <DateField source=\"end_date\" label=\"終了日\"/>\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='画像'>\n                <ImageField source=\"image1\" label=\"画像\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default TourShow;",["463","464"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointEdit.js",["465","466","467","468","469","470","471","472","473","474","475"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Edit,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    SelectArrayInput,\n    TopToolbar,\n    ListButton,\n    ShowButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\nimport { GMapInput } from '@fusionworks/ra-google-maps-input';\n\nconst identity = value => (value)\n\nconst CollectPointEditActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ShowButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateASCII = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(30)]\nconst validateASCIIforContient = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(20)]\nconst validateASCIIforIsland = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(24)]\nconst validateASCIIforMunicipality = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(50)]\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst CollectPointEdit = (props) => (\n    <Edit actions={<CollectPointEditActions/>} {...props} title=\"採集地点\">\n        <TabbedForm>\n            <FormTab label=\"地名情報\">\n                <AutocompleteInput source=\"country\" label=\"国名コード(ISO 3166-1)\" helperText=\"ISO 3166-1準拠の半角英字2字の国名コード\" resettable\n                choices={[\n                    { id: 'JP', name: '日本' },\n                ]}/>\n                <TextInput source=\"contient\" label=\"大陸\" helperText=\"半角英数記号20字以内\" parse={identity} resettable validate={validateASCIIforContient}/>\n                <TextInput source=\"island_group\" label=\"島群\" helperText=\"半角英数記号30字以内\" parse={identity} resettable validate={validateASCII}/>\n                <TextInput source=\"island\" label=\"島\" helperText=\"半角英数記号24字以内\" parse={identity} resettable validate={validateASCIIforIsland}/>\n                <TextInput source=\"state_provice\" label=\"県(州)\" helperText=\"半角英数記号30字以内\" parse={identity} resettable validate={validateASCII}/>\n                <TextInput source=\"county\" label=\"海外における群・区\" helperText=\"半角英数記号30字以内\" parse={identity} resettable validate={validateASCII}/>\n                <TextInput source=\"municipality\" label=\"市名以下の詳細地名\" helperText=\"半角英数記号50字以内 大地名から順にカンマ区切り\" parse={identity} resettable validate={validateASCIIforMunicipality}/>\n                <TextInput multiple source=\"verbatim_locality\" label=\"採集地の説明\" helperText=\"200字以内 改行可\" parse={identity} resettable validate={[minLength(0), maxLength(200)]}/>\n                <TextInput source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\" helperText=\"14字以内\" parse={identity} resettable validate={[minLength(0), maxLength(14)]}/>\n                <TextInput source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\" helperText=\"50字以内\" parse={identity} resettable validate={[minLength(0), maxLength(50)]}/>\n            </FormTab>\n            <FormTab label=\"緯度・経度・標高・水深\">\n                <NumberInput source=\"location.longitude\" label=\"経度\" helperText=\"半角数字 小数点以下6桁まで可\" resettable/>\n                <NumberInput source=\"location.latitude\" label=\"緯度\" helperText=\"半角数字 小数点以下6桁まで可\" resettable/>\n                <NumberInput source=\"coordinate_precision\" label=\"採集地の範囲(m)\" resettable/>\n                <NumberInput source=\"minimum_elevation\" label=\"最低標高\" resettable/>\n                <NumberInput source=\"maximum_elevation\" label=\"最高標高\" resettable/>\n                <NumberInput source=\"minimum_depth\" label=\"水面からの最浅の距離\" resettable/>\n                <NumberInput source=\"maximum_depth\" label=\"水面からの最深の距離\" resettable/>\n            </FormTab>\n            <FormTab label=\"管理情報\">\n                <ReferenceArrayInput source=\"tour\" reference=\"tours/own-tours\" label=\"所属する採集行\">\n                    <SelectArrayInput optionText=\"title\" />\n                </ReferenceArrayInput>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default CollectPointEdit;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectPoints/CollectPointShow.js",["476","477","478","479"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n} from 'react-admin';\n\n\nconst CollectPointShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst CollectPointShow = props => (\n    <Show actions={<CollectPointShowActions/>} {...props} title=\"カスタム分類情報\">\n        <TabbedShowLayout>\n            <Tab label='地名情報'>\n                <TextField source=\"country\" label=\"国名コード(ISO 3166-1)\"/>\n                <TextField source=\"contient\" label=\"大陸\"/>\n                <TextField source=\"island_group\" label=\"島群\"/>\n                <TextField source=\"island\" label=\"島\"/>\n                <TextField source=\"state_provice\" label=\"県(州)\"/>\n                <TextField source=\"county\" label=\"海外における群・区\"/>\n                <TextField source=\"municipality\" label=\"市名以下の詳細地名\"/>\n                <TextField source=\"verbatim_locality\" label=\"採集地の説明\"/>\n                <TextField source=\"japanese_place_name\" label=\"日本語地名(ラベル用)\"/>\n                <TextField source=\"japanese_place_name_detail\" label=\"日本語地名(詳細)\"/>\n            </Tab>\n            <Tab label=\"緯度・経度・標高・水深\">\n                <NumberField source=\"longitude\" label=\"経度\"/>\n                <NumberField source=\"latitude\" label=\"緯度\"/>\n                <NumberField source=\"coordinate_precision\" label=\"採集地の範囲\"/>\n                <NumberField source=\"minimum_elevation\" label=\"最低標高\"/>\n                <NumberField source=\"maximum_elevation\" label=\"最高標高\"/>\n                <NumberField source=\"minimum_depth\" label=\"水面からの最浅の距離\"/>\n                <NumberField source=\"maximum_depth\" label=\"水面からの最深の距離\"/>\n            </Tab>\n            <Tab label=\"管理情報\">\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='画像'>\n                <ImageField source=\"image1\" label=\"画像\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default CollectPointShow;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/tours/TourCreate.js",["480","481","482","483","484","485","486","487","488","489","490","491","492"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst TourCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst TourCreate = (props) => (\n    <Create actions={<TourCreateActions/>} {...props} title=\"採集行\">\n        <TabbedForm>\n            <FormTab label=\"基本情報\">\n                <TextInput source=\"title\" label=\"タイトル\"/>\n                <DateInput source=\"start_date\" label=\"開始日\"/>\n                <DateInput source=\"end_date\" label=\"終了日\"/>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default TourCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingList.js",["493","494","495","496","497","498","499","500","501","502","503","504","505","506","507","508","509","510","511","512","513"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    Filter,\n    DateInput,\n    NumberInput,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\n\nconst CollectionSettingListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst CollectionSettingFilter = props => (\n    <Filter {...props}>\n        <TextInput label=\"コレクション名\" source=\"collection_name\" alwaysOn resettable/>\n        <TextInput label=\"機関コード\" source=\"institution_code\" alwaysOn resettable/>\n        <NumberInput label=\"標本IDの最新番号の範囲(入力値以上)\" source=\"latest_collection_code_min\" alwaysOn resettable/>\n        <NumberInput label=\"標本IDの最新番号の範囲(入力値以下)\" source=\"latest_collection_code_max\" alwaysOn resettable/>\n        <DateInput label=\"作成日\" source=\"created_at\" alwaysOn resettable/> \n    </Filter>\n);\n\nconst CollectionSettingList = props => (\n    <List {...props} title=\"コレクション設定\" actions={<CollectionSettingListActions/>} filters={<CollectionSettingFilter />} perPage={20}\n        sort={{ field: 'institution_code', order: 'DESC' }}>\n        <Datagrid >\n            <TextField source=\"collection_name\" label=\"コレクション名\"/>\n            <TextField source=\"institution_code\" label=\"機関コード\"/>\n            <NumberField source=\"latest_collection_code\" label=\"標本IDの最新番号\"/>\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <EditButton label=\"編集\"/>\n            <ShowButton label=\"詳細\"/>\n        </Datagrid>\n    </List>\n);\n\nexport default CollectionSettingList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingCreate.js",["514","515","516","517","518","519","520","521","522","523","524"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst CollectionSettingCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateCollectionName = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(174)]\nconst validateInstitutionCode = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(10)]\n\n\nconst CollectionSettingCreate = (props) => (\n    <Create actions={<CollectionSettingCreateActions/>} {...props} title=\"コレクション設定\">\n        <TabbedForm>\n            <FormTab label=\"設定\">\n                <TextInput source=\"collection_name\" label=\"コレクション名のフルネーム\" helperText='半角英数記号174字以内' resettable validate={validateCollectionName}/>\n                <TextInput source=\"institution_code\" label=\"機関コード(コレクション名の略号)\" helperText='半角英数記号10字以内' resettable validate={validateInstitutionCode}/>\n                <NumberInput source=\"latest_collection_code\" label=\"標本IDの最新番号(標本登録時はこの値の+1が標本IDとなります)\" helperText='半角数字18桁以内(新規にコレクションを作成する場合は0を入力してください)' validate={[minValue(0), maxValue(999999999999999999)]}/>\n            </FormTab>\n            <FormTab label=\"備考\">\n                <TextInput multiline source=\"note\" label=\"備考\" helperText='200字以内 改行可' resettable validate={minLength(0), maxLength(200)}/>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default CollectionSettingCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/taxa/defaultTaxa/DefaultTaxonCreate.js",["525","526","527","528","529","530","531","532","533","534"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst DefaultTaxonCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst validateCamelCase = [regex(/^[A-Z][a-z]+$/, '先頭のみ大文字の半角英字にしてください'), minLength(0), maxLength(30)]\nconst validateLowerCase = [regex(/^[a-z]+$/, '全て小文字の半角英字にしてください'), minLength(0), maxLength(30)]\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst DefaultTaxonCreate = (props) => (\n    <Create actions={<DefaultTaxonCreateActions/>} {...props} title=\"デフォルト分類情報をベースにカスタム分類情報を作成\">\n        <TabbedForm>\n            <FormTab label=\"下位分類・記載者(年)・和名\">\n                <TextInput source=\"genus\" label=\"属\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subgenus\" label=\"亜属\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"species\" label=\"種\" helperText='全て小文字の半角英字30字以内' resettable validate={validateLowerCase}/>\n                <TextInput source=\"subspecies\" label=\"亜種\" helperText='全て小文字の半角英字30字以内' resettable validate={validateLowerCase}/>\n                <TextInput source=\"scientific_name_author\" label=\"記載者\" helperText='50字以内' resettable validate={[minLength(0), maxLength(50)]}/>\n                <NumberInput source=\"name_publishedin_year\" label=\"記載年\" helperText='半角数字4桁(不明な場合0を入力してください)' validate={[minValue(0), maxValue(9999)]}/>\n                <TextInput source=\"japanese_name\" label=\"和名\" helperText='30字以内' resettable validate={[minLength(0), maxLength(30)]}/>\n            </FormTab>\n            <FormTab label=\"上位分類\">\n                <TextInput source=\"kingdom\" label=\"界\" defaultValue=\"Animalia\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"phylum\" label=\"門\" defaultValue=\"Arthropoda\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"class_name\" label=\"綱\" defaultValue=\"Insecta\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"order\" label=\"目\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"suborder\" label=\"亜目\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"family\" label=\"科\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subfamily\" label=\"亜科\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"tribe\" label=\"族\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n                <TextInput source=\"subtribe\" label=\"亜族\" helperText='先頭のみ大文字の半角英字30字以内' resettable validate={validateCamelCase}/>\n            </FormTab>\n            <FormTab label=\"分布・備考\">\n                <TextInput multiline source=\"distribution\" label=\"分布\" helperText='100字以内 改行可' resettable validate={minLength(0), maxLength(100)}/>\n                <TextInput multiline source=\"note\" label=\"備考\" helperText='200字以内 改行可' resettable validate={minLength(0), maxLength(200)}/>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default DefaultTaxonCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/index.js",["535"],"import CollectionSettingList from './CollectionSettingList';\nimport CollectionSettingCreate from './CollectionSettingCreate';\nimport CollectionSettingEdit from './CollectionSettingEdit';\nimport CollectionSettingShow from './CollectionSettingShow';\n\nexport default {\n  list: CollectionSettingList,\n  create: CollectionSettingCreate,\n  edit: CollectionSettingEdit,\n  show: CollectionSettingShow,\n};\n","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingShow.js",["536","537","538","539","540"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n} from 'react-admin';\n\n\nconst CollectionSettingShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\nconst CollectionSettingShow = props => (\n    <Show actions={<CollectionSettingShowActions/>} {...props} title=\"コレクション設定\">\n        <TabbedShowLayout>\n            <Tab label='設定'>\n                <TextField source=\"collection_name\" label=\"コレクション名\"/>\n                <TextField source=\"institution_code\" label=\"機関コード\"/>\n                <NumberField source=\"latest_collection_code\" label=\"標本IDの最新番号\"/>\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='備考'>\n                <TextField source=\"note\" label=\"備考\" />\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default CollectionSettingShow;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/collectionSettings/CollectionSettingEdit.js",["541","542","543","544","545","546","547","548","549","550","551","552","553","554"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Edit,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ImageField,\n    AutocompleteInput,\n    ReferenceArrayInput,\n    SelectArrayInput,\n    TopToolbar,\n    ListButton,\n    ShowButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst CollectionSettingEditActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ShowButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nconst validateCollectionName = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(174)]\nconst validateInstitutionCode = [regex(/^[!-~ ]+$/, '半角英数記号のみにしてください'), minLength(0), maxLength(10)]\n\n\nconst CollectionSettingEdit = (props) => (\n    <Edit actions={<CollectionSettingEditActions/>} {...props} title=\"コレクション設定\">\n        <TabbedForm>\n        <FormTab label=\"設定\">\n                <TextInput source=\"collection_name\" label=\"コレクション名のフルネーム\" helperText='半角英数記号174字以内' resettable validate={validateCollectionName}/>\n                <TextInput source=\"institution_code\" label=\"機関コード(コレクション名の略号)\" helperText='半角英数記号10字以内' resettable validate={validateInstitutionCode}/>\n                <NumberInput source=\"latest_collection_code\" label=\"標本IDの最新番号(標本登録時はこの値の+1が標本IDとなります)\" helperText='半角数字18桁以内(新規にコレクションを作成する場合は0を入力してください)' validate={[minValue(0), maxValue(999999999999999999)]}/>\n            </FormTab>\n            <FormTab label=\"備考\">\n                <TextInput multiline source=\"note\" label=\"備考\" helperText='200字以内 改行可' resettable validate={minLength(0), maxLength(200)}/>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default CollectionSettingEdit;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenEdit.js",["555","556","557","558","559","560","561","562","563","564","565","566"],"import * as React from \"react\";\nimport {\n    TopToolbar,\n    TabbedForm,\n    FormTab,\n    Edit,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ReferenceInput,\n    AutocompleteInput,\n    EditButton,\n    ShowButton,\n    ListButton,\n    ImageInput,\n    ImageField,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst identity = value => (value)\n\nconst SpecimenEditActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ShowButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst SpecimenEdit = (props) => (\n    <Edit actions={<SpecimenEditActions/>} {...props} title=\"標本\">\n        <TabbedForm>\n            <FormTab label=\"標本固有情報\">\n                <ReferenceInput\n                    source=\"collection_settings_info\"\n                    label=\"登録されたコレクション設定情報\"\n                    reference=\"collection-settings/own-collection-settings\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"institution_code\" helperText=\"機関コードで検索\"/>\n                </ReferenceInput>\n                <NumberInput source=\"collection_code\" label=\"標本ID\" helperText='半角数字18桁以内(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(999999999999999999)]}/>\n                <DateInput source=\"date_identified\" label=\"同定日\"/>\n                <NumberInput source=\"year\" label=\"採集年\" helperText='半角数字4桁以内(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(9999)]}/>\n                <NumberInput source=\"month\" label=\"採集月\" helperText='半角数字12以下(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(12)]}/>\n                <NumberInput source=\"day\" label=\"採集日\" helperText='半角数字31以下(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(31)]}/>\n            </FormTab>\n            <FormTab label=\"分類情報\">\n                <ReferenceInput\n                    source=\"custom_taxon_info\"\n                    label=\"登録されたカスタム分類情報\"\n                    reference=\"taxa/own-taxa\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"scientific_name\" helperText=\"属 種 亜種 の組み合わせで検索\"/>\n                </ReferenceInput>\n                <ReferenceInput\n                    source=\"default_taxon_info\"\n                    label=\"登録されたデフォルト分類情報\"\n                    reference=\"taxa/shared-taxa\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"scientific_name\" helperText=\"属 種 亜種 の組み合わせで検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"採集地点\">\n                <ReferenceInput\n                    source=\"collect_point_info\"\n                    label=\"登録された採集地点\"\n                    reference=\"collect-points/own-collect-points\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"japanese_place_name\" helperText=\"日本語地名で検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"採集行\">\n                <ReferenceInput\n                    source=\"tour\"\n                    label=\"登録された採集行\"\n                    reference=\"tours/own-tours\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"title\" helperText=\"採集行のタイトルで検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default SpecimenEdit;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/specimens/SpecimenCreate.js",["567","568","569","570","571","572","573","574","575","576","577","578","579","580","581","582"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ReferenceInput,\n    AutocompleteInput,\n    FormDataConsumer,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n    useQuery,\n    Loading,\n    Error,\n    NumberField,\n} from 'react-admin';\n\nimport { useFormState } from 'react-final-form';\n\nconst identity = value => (value)\n\n\nconst SpecimenCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nfunction formatImage(value) {\n    if (!value ||  typeof value === \"string\") {\n     return { url: value };\n    } else {\n      return value;\n    }\n}\n\n\nconst SpecimenCreate = (props) => (\n    <Create actions={<SpecimenCreateActions/>} {...props} title=\"標本\">\n        <TabbedForm>\n            <FormTab label=\"標本固有情報\">\n                <ReferenceInput\n                    source=\"collection_settings_info\"\n                    label=\"登録されたコレクション設定情報\"\n                    reference=\"collection-settings/own-collection-settings\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"institution_code\" helperText=\"機関コードで検索\"/>\n                </ReferenceInput>\n                <FormDataConsumer>\n                    {({ formData, ...rest }) => formData.collection_settings_info &&\n                        <NumberInput source=\"collection_code\" {...rest} label=\"標本ID 自動連番にする場合は入力しないでください\" helperText='半角数字18桁以内(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(999999999999999999)]}/>\n                    }\n                </FormDataConsumer>\n                <DateInput source=\"date_identified\" label=\"同定日\"/>\n                <NumberInput source=\"year\" label=\"採集年\" helperText='半角数字4桁以内(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(9999)]}/>\n                <NumberInput source=\"month\" label=\"採集月\" helperText='半角数字12以下(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(12)]}/>\n                <NumberInput source=\"day\" label=\"採集日\" helperText='半角数字31以下(不明な場合0を入力してください)' parse={identity} validate={[minValue(0), maxValue(31)]}/>\n            </FormTab>\n            <FormTab label=\"分類情報\">\n                <ReferenceInput\n                    source=\"custom_taxon_info\"\n                    label=\"登録されたカスタム分類情報\"\n                    reference=\"taxa/own-taxa\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"scientific_name\" helperText=\"属 種 亜種 の組み合わせで検索\"/>\n                </ReferenceInput>\n                <ReferenceInput\n                    source=\"default_taxon_info\"\n                    label=\"登録されたデフォルト分類情報\"\n                    reference=\"taxa/shared-taxa\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"scientific_name\" helperText=\"属 種 亜種 の組み合わせで検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"採集地点\">\n                <ReferenceInput\n                    source=\"collect_point_info\"\n                    label=\"登録された採集地点\"\n                    reference=\"collect-points/own-collect-points\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"japanese_place_name\" helperText=\"日本語地名で検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"採集行\">\n                <ReferenceInput\n                    source=\"tour\"\n                    label=\"登録された採集行\"\n                    reference=\"tours/own-tours\"\n                    filterToQuery={searchText => ({ q: searchText })}>\n                    <AutocompleteInput optionText=\"title\" helperText=\"採集行のタイトルで検索\"/>\n                </ReferenceInput>\n            </FormTab>\n            <FormTab label=\"画像\">\n                <ImageInput format={formatImage} source=\"image1\" label=\"画像\" >\n                    <ImageField source=\"url\" title=\"title\" />\n                </ImageInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default SpecimenCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/index.js",["583"],"/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelList.js",["584","585","586","587","588","589","590","591","592","593","594","595","596","597","598","599","600","601","602","603","604","605","606"],"import * as React from 'react';\nimport { cloneElement, useMemo } from 'react';\nimport {\n    useListContext,\n    TopToolbar,\n    CreateButton,\n    ExportButton,\n    Button,\n    sanitizeListRestProps,\n    EditActions,\n    DeleteButton,\n    BulkDeleteButton,\n    ListButton,\n    Tab,\n    ShowActions,\n    Show,\n    ShowButton,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    List,\n    Edit,\n    Create,\n    Datagrid,\n    ReferenceField,\n    BooleanField,\n    TextField,\n    NumberField,\n    EditButton,\n    ReferenceInput,\n    SelectInput,\n    SimpleForm,\n    TextInput,\n    Filter,\n    DateInput,\n    BooleanInput,\n} from 'react-admin';\nimport IconEvent from '@material-ui/icons/Event';\n\n\nconst LabelListActions = (props) => {\n    const {\n        className,\n        exporter,\n        filters,\n        maxResults,\n        ...rest\n    } = props;\n    const {\n        currentSort,\n        resource,\n        displayedFilters,\n        filterValues,\n        hasCreate,\n        basePath,\n        selectedIds,\n        showFilter,\n        total,\n    } = useListContext();\n    return (\n        <TopToolbar className={className} {...sanitizeListRestProps(rest)}>\n            {filters && cloneElement(filters, {\n                resource,\n                showFilter,\n                displayedFilters,\n                filterValues,\n                context: 'button',\n            })}\n            <CreateButton basePath={basePath} />\n            <ExportButton\n                disabled={total === 0}\n                resource={resource}\n                sort={currentSort}\n                filterValues={filterValues}\n                maxResults={maxResults}\n            />\n            {/* Add your custom actions */}\n        </TopToolbar>\n    );\n};\n\nconst LabelFilter = props => (\n    <Filter {...props}>\n        <TextInput label=\"ラベル名\" source=\"name\" alwaysOn resettable/>\n        <DateInput label=\"作成日\" source=\"created_at\" alwaysOn resettable/> \n    </Filter>\n);\n\nconst LabelList = props => (\n    <List {...props} title=\"ラベル\" actions={<LabelListActions/>} filters={<LabelFilter />} perPage={20}\n        sort={{ field: 'name', order: 'DESC' }}>\n        <Datagrid >\n            <TextField source=\"name\" label=\"ラベル名\"/>\n            <BooleanField source=\"data_label_flag\" label=\"データラベル作成の可否\"/>\n            <BooleanField source=\"coll_label_flag\" label=\"コレクションラベル作成の可否\"/>\n            <BooleanField source=\"det_label_flag\" label=\"同定ラベル作成の可否\"/>\n            <BooleanField source=\"note_label_flag\" label=\"備考ラベル作成の可否\"/>\n            <DateField source=\"created_at\" label=\"作成日\"/>\n            <EditButton label=\"編集\"/>\n            <ShowButton label=\"詳細\"/>\n        </Datagrid>\n    </List>\n);\n\nexport default LabelList;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelEdit.js",["607","608","609","610","611","612","613","614","615","616","617","618","619","620","621","622","623","624","625"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Edit,\n    Button,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ReferenceArrayInput,\n    SelectArrayInput,\n    ImageInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    ShowButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n    useMutation, Loading, Error\n} from 'react-admin';\n\n\nconst LabelEditActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ShowButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nconst LabelEdit = (props) => (\n    <Edit actions={<LabelEditActions/>} {...props} title=\"ラベル\">\n        <TabbedForm>\n            <FormTab label=\"基本情報\">\n                <TextInput source=\"name\" label=\"ラベル名\"/>\n                <BooleanInput source=\"data_label_flag\" label=\"データラベル作成の可否\"/>\n                <BooleanInput source=\"coll_label_flag\" label=\"コレクションラベル作成の可否\"/>\n                <BooleanInput source=\"det_label_flag\" label=\"同定ラベル作成の可否\"/>\n                <BooleanInput source=\"note_label_flag\" label=\"備考ラベル作成の可否\"/>\n            </FormTab>\n            <FormTab label=\"所属標本\">\n                <ReferenceArrayInput source=\"label_specimens\" reference=\"specimens/own-specimens\" perPage={100}>\n                    <SelectArrayInput optionText=\"name\" />\n                </ReferenceArrayInput>\n            </FormTab>\n        </TabbedForm>\n    </Edit>\n);\n\nexport default LabelEdit;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelCreate.js",["626","627","628","629","630","631","632","633","634","635","636","637","638","639","640"],"import * as React from \"react\";\nimport {\n    TabbedForm,\n    FormTab,\n    Create,\n    Datagrid,\n    TextField,\n    DateField,\n    TextInput,\n    ReferenceManyField,\n    NumberInput,    \n    DateInput,\n    BooleanInput,\n    ImageInput,\n    ReferenceArrayInput,\n    SelectArrayInput,\n    ImageField,\n    TopToolbar,\n    ListButton,\n    required,\n    minLength,\n    maxLength,\n    minValue,\n    maxValue,\n    number,\n    regex,\n} from 'react-admin';\n\n\nconst LabelCreateActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <ListButton basePath={basePath} />\n    </TopToolbar>\n);\n\n\nconst LabelCreate = (props) => (\n    <Create actions={<LabelCreateActions/>} {...props} title=\"ラベル\">\n        <TabbedForm>\n            <FormTab label=\"基本情報\">\n                <TextInput source=\"name\" label=\"ラベル名\"/>\n                <BooleanInput source=\"data_label_flag\" label=\"データラベル作成の可否\"/>\n                <BooleanInput source=\"coll_label_flag\" label=\"コレクションラベル作成の可否\"/>\n                <BooleanInput source=\"det_label_flag\" label=\"同定ラベル作成の可否\"/>\n                <BooleanInput source=\"note_label_flag\" label=\"備考ラベル作成の可否\"/>\n            </FormTab>\n            <FormTab label=\"所属標本\">\n                <ReferenceArrayInput source=\"label_specimens\" reference=\"specimens/own-specimens\" perPage={100}>\n                    <SelectArrayInput optionText=\"name\" />\n                </ReferenceArrayInput>\n            </FormTab>\n        </TabbedForm>\n    </Create>\n);\n\nexport default LabelCreate;","/home/fujikawahiroaki/mycode/webspecimanager/frontend/src/pages/labels/LabelShow.js",["641","642","643","644","645","646","647","648"],"import * as React from 'react';\nimport {\n    TopToolbar,\n    ListButton,\n    Tab,\n    Show,\n    Button,\n    SimpleShowLayout,\n    TabbedShowLayout,\n    RichTextField,\n    DateField,\n    Datagrid,\n    ReferenceField,\n    BooleanField,\n    ReferenceArrayField,\n    SingleFieldList,\n    ChipField,\n    TextField,\n    NumberField,\n    EditButton,\n    ImageField,\n    useMutation, Loading, Error\n} from 'react-admin';\n\n\nconst MakePDFButton = ({ record }) => {\n    const [mutate, { loading }] = useMutation();\n    const pdfLink = event => mutate({\n        type: 'getLabelPdf',\n        resource: 'label-maker/own-labels',\n        payload: {id: record.id},\n    });\n    return <Button\n        label=\"ラベル生成\"\n        onClick={pdfLink}\n        disabled={loading}\n    />;\n};\n\n\nconst LabelShowActions = ({ basePath, data}) => (\n    <TopToolbar>\n        <EditButton basePath={basePath} record={data}/>\n        <ListButton basePath={basePath} />\n        <MakePDFButton record={data} />\n    </TopToolbar>\n);\n\n\nconst LabelShow = props => (\n    <Show actions={<LabelShowActions/>} {...props} title=\"ラベル\">\n        <TabbedShowLayout>\n            <Tab label='基本情報'>\n                <TextField source=\"name\" label=\"ラベル名\"/>\n                <BooleanField source=\"data_label_flag\" label=\"データラベル作成の可否\"/>\n                <BooleanField source=\"coll_label_flag\" label=\"コレクションラベル作成の可否\"/>\n                <BooleanField source=\"det_label_flag\" label=\"同定ラベル作成の可否\"/>\n                <BooleanField source=\"note_label_flag\" label=\"備考ラベル作成の可否\"/>\n                <DateField source=\"created_at\" label=\"作成日\"/>\n            </Tab>\n            <Tab label='所属標本'>\n                <ReferenceArrayField label=\"所属標本\" reference=\"specimens/own-specimens\" source=\"label_specimens\">\n                    <SingleFieldList>\n                        <ChipField source=\"name\"/>\n                    </SingleFieldList>\n                </ReferenceArrayField>\n            </Tab>\n        </TabbedShowLayout>\n    </Show>\n);\n\nexport default LabelShow;",{"ruleId":"649","replacedBy":"650"},{"ruleId":"651","replacedBy":"652"},{"ruleId":"653","severity":1,"message":"654","line":1,"column":17,"nodeType":"655","messageId":"656","endLine":1,"endColumn":25},{"ruleId":"657","severity":1,"message":"658","line":14,"column":1,"nodeType":"659","endLine":58,"endColumn":3},{"ruleId":"649","replacedBy":"660"},{"ruleId":"651","replacedBy":"661"},{"ruleId":"657","severity":1,"message":"658","line":1,"column":1,"nodeType":"659","endLine":6,"endColumn":2},{"ruleId":"653","severity":1,"message":"662","line":2,"column":10,"nodeType":"655","messageId":"656","endLine":2,"endColumn":18},{"ruleId":"653","severity":1,"message":"663","line":5,"column":26,"nodeType":"655","messageId":"656","endLine":5,"endColumn":37},{"ruleId":"653","severity":1,"message":"664","line":5,"column":39,"nodeType":"655","messageId":"656","endLine":5,"endColumn":50},{"ruleId":"653","severity":1,"message":"665","line":5,"column":52,"nodeType":"655","messageId":"656","endLine":5,"endColumn":63},{"ruleId":"649","replacedBy":"666"},{"ruleId":"651","replacedBy":"667"},{"ruleId":"649","replacedBy":"668"},{"ruleId":"651","replacedBy":"669"},{"ruleId":"657","severity":1,"message":"670","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"649","replacedBy":"671"},{"ruleId":"651","replacedBy":"672"},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"649","replacedBy":"676"},{"ruleId":"651","replacedBy":"677"},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"675","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"691","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":33,"column":5,"nodeType":"655","messageId":"656","endLine":33,"endColumn":15},{"ruleId":"653","severity":1,"message":"694","line":35,"column":5,"nodeType":"655","messageId":"656","endLine":35,"endColumn":16},{"ruleId":"653","severity":1,"message":"695","line":39,"column":5,"nodeType":"655","messageId":"656","endLine":39,"endColumn":17},{"ruleId":"653","severity":1,"message":"696","line":41,"column":8,"nodeType":"655","messageId":"656","endLine":41,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":58,"column":9,"nodeType":"655","messageId":"656","endLine":58,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":60,"column":9,"nodeType":"655","messageId":"656","endLine":60,"endColumn":20},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"675","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":28,"column":5,"nodeType":"655","messageId":"656","endLine":28,"endColumn":16},{"ruleId":"653","severity":1,"message":"691","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":33,"column":5,"nodeType":"655","messageId":"656","endLine":33,"endColumn":15},{"ruleId":"653","severity":1,"message":"694","line":35,"column":5,"nodeType":"655","messageId":"656","endLine":35,"endColumn":16},{"ruleId":"653","severity":1,"message":"695","line":39,"column":5,"nodeType":"655","messageId":"656","endLine":39,"endColumn":17},{"ruleId":"653","severity":1,"message":"696","line":41,"column":8,"nodeType":"655","messageId":"656","endLine":41,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":58,"column":9,"nodeType":"655","messageId":"656","endLine":58,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":60,"column":9,"nodeType":"655","messageId":"656","endLine":60,"endColumn":20},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":16},{"ruleId":"653","severity":1,"message":"675","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":17},{"ruleId":"653","severity":1,"message":"705","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":15},{"ruleId":"653","severity":1,"message":"706","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":76,"column":145,"nodeType":"710","messageId":"711","endLine":76,"endColumn":146},{"ruleId":"708","severity":1,"message":"709","line":77,"column":137,"nodeType":"710","messageId":"711","endLine":77,"endColumn":138},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":71,"column":128,"nodeType":"710","messageId":"711","endLine":71,"endColumn":129},{"ruleId":"708","severity":1,"message":"709","line":72,"column":120,"nodeType":"710","messageId":"711","endLine":72,"endColumn":121},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"712","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":17},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":11},{"ruleId":"653","severity":1,"message":"675","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":19},{"ruleId":"653","severity":1,"message":"705","line":30,"column":5,"nodeType":"655","messageId":"656","endLine":30,"endColumn":15},{"ruleId":"653","severity":1,"message":"691","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":33,"column":5,"nodeType":"655","messageId":"656","endLine":33,"endColumn":15},{"ruleId":"653","severity":1,"message":"696","line":39,"column":8,"nodeType":"655","messageId":"656","endLine":39,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":57,"column":9,"nodeType":"655","messageId":"656","endLine":57,"endColumn":18},{"ruleId":"653","severity":1,"message":"713","line":58,"column":9,"nodeType":"655","messageId":"656","endLine":58,"endColumn":17},{"ruleId":"653","severity":1,"message":"698","line":59,"column":9,"nodeType":"655","messageId":"656","endLine":59,"endColumn":20},{"ruleId":"649","replacedBy":"714"},{"ruleId":"651","replacedBy":"715"},{"ruleId":"657","severity":1,"message":"658","line":5,"column":1,"nodeType":"659","endLine":9,"endColumn":3},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":16},{"ruleId":"653","severity":1,"message":"705","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":15},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"716","severity":1,"message":"717","line":4,"column":22,"nodeType":"718","messageId":"719","endLine":4,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":4,"column":71,"nodeType":"718","messageId":"719","endLine":4,"endColumn":73},{"ruleId":"716","severity":1,"message":"717","line":5,"column":25,"nodeType":"718","messageId":"719","endLine":5,"endColumn":27},{"ruleId":"716","severity":1,"message":"717","line":9,"column":22,"nodeType":"718","messageId":"719","endLine":9,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":58,"column":22,"nodeType":"718","messageId":"719","endLine":58,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":95,"column":22,"nodeType":"718","messageId":"719","endLine":95,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":135,"column":22,"nodeType":"718","messageId":"719","endLine":135,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":175,"column":22,"nodeType":"718","messageId":"719","endLine":175,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":218,"column":22,"nodeType":"718","messageId":"719","endLine":218,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":218,"column":71,"nodeType":"718","messageId":"719","endLine":218,"endColumn":73},{"ruleId":"716","severity":1,"message":"717","line":219,"column":25,"nodeType":"718","messageId":"719","endLine":219,"endColumn":27},{"ruleId":"716","severity":1,"message":"717","line":223,"column":22,"nodeType":"718","messageId":"719","endLine":223,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":263,"column":22,"nodeType":"718","messageId":"719","endLine":263,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":303,"column":22,"nodeType":"718","messageId":"719","endLine":303,"endColumn":24},{"ruleId":"716","severity":1,"message":"717","line":344,"column":22,"nodeType":"718","messageId":"719","endLine":344,"endColumn":24},{"ruleId":"653","severity":1,"message":"720","line":405,"column":7,"nodeType":"655","messageId":"656","endLine":405,"endColumn":32},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":28,"column":5,"nodeType":"655","messageId":"656","endLine":28,"endColumn":16},{"ruleId":"653","severity":1,"message":"691","line":30,"column":5,"nodeType":"655","messageId":"656","endLine":30,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":15},{"ruleId":"653","severity":1,"message":"696","line":37,"column":8,"nodeType":"655","messageId":"656","endLine":37,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":53,"column":9,"nodeType":"655","messageId":"656","endLine":53,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":55,"column":9,"nodeType":"655","messageId":"656","endLine":55,"endColumn":20},{"ruleId":"653","severity":1,"message":"721","line":3,"column":3,"nodeType":"655","messageId":"656","endLine":3,"endColumn":13},{"ruleId":"653","severity":1,"message":"722","line":4,"column":3,"nodeType":"655","messageId":"656","endLine":4,"endColumn":13},{"ruleId":"653","severity":1,"message":"723","line":5,"column":3,"nodeType":"655","messageId":"656","endLine":5,"endColumn":7},{"ruleId":"653","severity":1,"message":"724","line":6,"column":3,"nodeType":"655","messageId":"656","endLine":6,"endColumn":9},{"ruleId":"653","severity":1,"message":"725","line":8,"column":3,"nodeType":"655","messageId":"656","endLine":8,"endColumn":15},{"ruleId":"657","severity":1,"message":"670","line":33,"column":1,"nodeType":"659","endLine":179,"endColumn":3},{"ruleId":"716","severity":1,"message":"717","line":125,"column":20,"nodeType":"718","messageId":"719","endLine":125,"endColumn":22},{"ruleId":"716","severity":1,"message":"717","line":136,"column":20,"nodeType":"718","messageId":"719","endLine":136,"endColumn":22},{"ruleId":"716","severity":1,"message":"717","line":138,"column":84,"nodeType":"718","messageId":"719","endLine":138,"endColumn":86},{"ruleId":"653","severity":1,"message":"726","line":141,"column":23,"nodeType":"655","messageId":"656","endLine":141,"endColumn":49},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"727","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":16},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":14},{"ruleId":"653","severity":1,"message":"730","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":10},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"675","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"691","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":33,"column":5,"nodeType":"655","messageId":"656","endLine":33,"endColumn":15},{"ruleId":"653","severity":1,"message":"694","line":35,"column":5,"nodeType":"655","messageId":"656","endLine":35,"endColumn":16},{"ruleId":"653","severity":1,"message":"695","line":39,"column":5,"nodeType":"655","messageId":"656","endLine":39,"endColumn":17},{"ruleId":"653","severity":1,"message":"696","line":41,"column":8,"nodeType":"655","messageId":"656","endLine":41,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":58,"column":9,"nodeType":"655","messageId":"656","endLine":58,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":60,"column":9,"nodeType":"655","messageId":"656","endLine":60,"endColumn":20},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":13},{"ruleId":"653","severity":1,"message":"730","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":11},{"ruleId":"653","severity":1,"message":"733","line":29,"column":10,"nodeType":"655","messageId":"656","endLine":29,"endColumn":19},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":16},{"ruleId":"649","replacedBy":"734"},{"ruleId":"651","replacedBy":"735"},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"730","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":11},{"ruleId":"653","severity":1,"message":"733","line":30,"column":10,"nodeType":"655","messageId":"656","endLine":30,"endColumn":19},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":19},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"727","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":16},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":14},{"ruleId":"653","severity":1,"message":"730","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":10},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"691","line":30,"column":5,"nodeType":"655","messageId":"656","endLine":30,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":15},{"ruleId":"653","severity":1,"message":"696","line":38,"column":8,"nodeType":"655","messageId":"656","endLine":38,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":54,"column":9,"nodeType":"655","messageId":"656","endLine":54,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":56,"column":9,"nodeType":"655","messageId":"656","endLine":56,"endColumn":20},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"736","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":15},{"ruleId":"653","severity":1,"message":"737","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":15},{"ruleId":"653","severity":1,"message":"706","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":47,"column":120,"nodeType":"710","messageId":"711","endLine":47,"endColumn":121},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":71,"column":128,"nodeType":"710","messageId":"711","endLine":71,"endColumn":129},{"ruleId":"708","severity":1,"message":"709","line":72,"column":120,"nodeType":"710","messageId":"711","endLine":72,"endColumn":121},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"653","severity":1,"message":"673","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":19},{"ruleId":"653","severity":1,"message":"737","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":15},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"736","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":15},{"ruleId":"653","severity":1,"message":"737","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":15},{"ruleId":"653","severity":1,"message":"738","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":22},{"ruleId":"653","severity":1,"message":"739","line":17,"column":5,"nodeType":"655","messageId":"656","endLine":17,"endColumn":24},{"ruleId":"653","severity":1,"message":"740","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"706","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":11},{"ruleId":"708","severity":1,"message":"709","line":53,"column":120,"nodeType":"710","messageId":"711","endLine":53,"endColumn":121},{"ruleId":"653","severity":1,"message":"675","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":14},{"ruleId":"653","severity":1,"message":"741","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":23},{"ruleId":"653","severity":1,"message":"704","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":17},{"ruleId":"653","severity":1,"message":"705","line":17,"column":5,"nodeType":"655","messageId":"656","endLine":17,"endColumn":15},{"ruleId":"653","severity":1,"message":"706","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":14},{"ruleId":"653","severity":1,"message":"707","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":28,"column":5,"nodeType":"655","messageId":"656","endLine":28,"endColumn":10},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"741","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"704","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":17},{"ruleId":"653","severity":1,"message":"706","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":14},{"ruleId":"653","severity":1,"message":"707","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":10},{"ruleId":"653","severity":1,"message":"742","line":28,"column":5,"nodeType":"655","messageId":"656","endLine":28,"endColumn":13},{"ruleId":"653","severity":1,"message":"743","line":29,"column":5,"nodeType":"655","messageId":"656","endLine":29,"endColumn":12},{"ruleId":"653","severity":1,"message":"744","line":30,"column":5,"nodeType":"655","messageId":"656","endLine":30,"endColumn":10},{"ruleId":"653","severity":1,"message":"699","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":16},{"ruleId":"653","severity":1,"message":"745","line":34,"column":10,"nodeType":"655","messageId":"656","endLine":34,"endColumn":22},{"ruleId":"657","severity":1,"message":"658","line":6,"column":1,"nodeType":"659","endLine":11,"endColumn":3},{"ruleId":"653","severity":1,"message":"678","line":2,"column":24,"nodeType":"655","messageId":"656","endLine":2,"endColumn":31},{"ruleId":"653","severity":1,"message":"679","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":11},{"ruleId":"653","severity":1,"message":"680","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":16},{"ruleId":"653","severity":1,"message":"681","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":17},{"ruleId":"653","severity":1,"message":"682","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":21},{"ruleId":"653","severity":1,"message":"683","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":15},{"ruleId":"653","severity":1,"message":"684","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":8},{"ruleId":"653","severity":1,"message":"685","line":15,"column":5,"nodeType":"655","messageId":"656","endLine":15,"endColumn":16},{"ruleId":"653","severity":1,"message":"686","line":16,"column":5,"nodeType":"655","messageId":"656","endLine":16,"endColumn":9},{"ruleId":"653","severity":1,"message":"673","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":21},{"ruleId":"653","severity":1,"message":"687","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":18},{"ruleId":"653","severity":1,"message":"688","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":9},{"ruleId":"653","severity":1,"message":"689","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":11},{"ruleId":"653","severity":1,"message":"690","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":29,"column":5,"nodeType":"655","messageId":"656","endLine":29,"endColumn":16},{"ruleId":"653","severity":1,"message":"691","line":31,"column":5,"nodeType":"655","messageId":"656","endLine":31,"endColumn":19},{"ruleId":"653","severity":1,"message":"692","line":32,"column":5,"nodeType":"655","messageId":"656","endLine":32,"endColumn":16},{"ruleId":"653","severity":1,"message":"693","line":33,"column":5,"nodeType":"655","messageId":"656","endLine":33,"endColumn":15},{"ruleId":"653","severity":1,"message":"704","line":37,"column":5,"nodeType":"655","messageId":"656","endLine":37,"endColumn":17},{"ruleId":"653","severity":1,"message":"696","line":39,"column":8,"nodeType":"655","messageId":"656","endLine":39,"endColumn":17},{"ruleId":"653","severity":1,"message":"697","line":55,"column":9,"nodeType":"655","messageId":"656","endLine":55,"endColumn":18},{"ruleId":"653","severity":1,"message":"698","line":57,"column":9,"nodeType":"655","messageId":"656","endLine":57,"endColumn":20},{"ruleId":"653","severity":1,"message":"679","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":11},{"ruleId":"653","severity":1,"message":"675","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":9,"column":5,"nodeType":"655","messageId":"656","endLine":9,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":23},{"ruleId":"653","severity":1,"message":"727","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":16},{"ruleId":"653","severity":1,"message":"703","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":14},{"ruleId":"653","severity":1,"message":"736","line":17,"column":5,"nodeType":"655","messageId":"656","endLine":17,"endColumn":15},{"ruleId":"653","severity":1,"message":"737","line":18,"column":5,"nodeType":"655","messageId":"656","endLine":18,"endColumn":15},{"ruleId":"653","severity":1,"message":"706","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":14},{"ruleId":"653","severity":1,"message":"730","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":27,"column":5,"nodeType":"655","messageId":"656","endLine":27,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":28,"column":5,"nodeType":"655","messageId":"656","endLine":28,"endColumn":10},{"ruleId":"653","severity":1,"message":"746","line":29,"column":5,"nodeType":"655","messageId":"656","endLine":29,"endColumn":16},{"ruleId":"653","severity":1,"message":"743","line":29,"column":18,"nodeType":"655","messageId":"656","endLine":29,"endColumn":25},{"ruleId":"653","severity":1,"message":"744","line":29,"column":27,"nodeType":"655","messageId":"656","endLine":29,"endColumn":32},{"ruleId":"653","severity":1,"message":"675","line":6,"column":5,"nodeType":"655","messageId":"656","endLine":6,"endColumn":13},{"ruleId":"653","severity":1,"message":"700","line":7,"column":5,"nodeType":"655","messageId":"656","endLine":7,"endColumn":14},{"ruleId":"653","severity":1,"message":"701","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":14},{"ruleId":"653","severity":1,"message":"702","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":23},{"ruleId":"653","severity":1,"message":"727","line":11,"column":5,"nodeType":"655","messageId":"656","endLine":11,"endColumn":16},{"ruleId":"653","severity":1,"message":"703","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":14},{"ruleId":"653","severity":1,"message":"736","line":14,"column":5,"nodeType":"655","messageId":"656","endLine":14,"endColumn":15},{"ruleId":"653","severity":1,"message":"737","line":17,"column":5,"nodeType":"655","messageId":"656","endLine":17,"endColumn":15},{"ruleId":"653","severity":1,"message":"706","line":20,"column":5,"nodeType":"655","messageId":"656","endLine":20,"endColumn":13},{"ruleId":"653","severity":1,"message":"728","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":14},{"ruleId":"653","severity":1,"message":"729","line":22,"column":5,"nodeType":"655","messageId":"656","endLine":22,"endColumn":14},{"ruleId":"653","severity":1,"message":"730","line":23,"column":5,"nodeType":"655","messageId":"656","endLine":23,"endColumn":13},{"ruleId":"653","severity":1,"message":"731","line":24,"column":5,"nodeType":"655","messageId":"656","endLine":24,"endColumn":13},{"ruleId":"653","severity":1,"message":"707","line":25,"column":5,"nodeType":"655","messageId":"656","endLine":25,"endColumn":11},{"ruleId":"653","severity":1,"message":"732","line":26,"column":5,"nodeType":"655","messageId":"656","endLine":26,"endColumn":10},{"ruleId":"653","severity":1,"message":"673","line":8,"column":5,"nodeType":"655","messageId":"656","endLine":8,"endColumn":21},{"ruleId":"653","severity":1,"message":"674","line":10,"column":5,"nodeType":"655","messageId":"656","endLine":10,"endColumn":18},{"ruleId":"653","severity":1,"message":"675","line":12,"column":5,"nodeType":"655","messageId":"656","endLine":12,"endColumn":13},{"ruleId":"653","severity":1,"message":"690","line":13,"column":5,"nodeType":"655","messageId":"656","endLine":13,"endColumn":19},{"ruleId":"653","severity":1,"message":"699","line":19,"column":5,"nodeType":"655","messageId":"656","endLine":19,"endColumn":16},{"ruleId":"653","severity":1,"message":"737","line":21,"column":5,"nodeType":"655","messageId":"656","endLine":21,"endColumn":15},{"ruleId":"653","severity":1,"message":"743","line":22,"column":18,"nodeType":"655","messageId":"656","endLine":22,"endColumn":25},{"ruleId":"653","severity":1,"message":"744","line":22,"column":27,"nodeType":"655","messageId":"656","endLine":22,"endColumn":32},"no-native-reassign",["747"],"no-negated-in-lhs",["748"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["747"],["748"],"'Provider' is defined but never used.","'ListGuesser' is defined but never used.","'EditGuesser' is defined but never used.","'ShowGuesser' is defined but never used.",["747"],["748"],["747"],["748"],"Assign arrow function to a variable before exporting as module default",["747"],["748"],"'SimpleShowLayout' is defined but never used.","'RichTextField' is defined but never used.","'Datagrid' is defined but never used.",["747"],["748"],"'useMemo' is defined but never used.","'Button' is defined but never used.","'EditActions' is defined but never used.","'DeleteButton' is defined but never used.","'BulkDeleteButton' is defined but never used.","'ListButton' is defined but never used.","'Tab' is defined but never used.","'ShowActions' is defined but never used.","'Show' is defined but never used.","'TabbedShowLayout' is defined but never used.","'Edit' is defined but never used.","'Create' is defined but never used.","'ReferenceField' is defined but never used.","'ReferenceInput' is defined but never used.","'SelectInput' is defined but never used.","'SimpleForm' is defined but never used.","'SearchInput' is defined but never used.","'BooleanField' is defined but never used.","'IconEvent' is defined but never used.","'hasCreate' is assigned a value but never used.","'selectedIds' is assigned a value but never used.","'NumberField' is defined but never used.","'TextField' is defined but never used.","'DateField' is defined but never used.","'ReferenceManyField' is defined but never used.","'DateInput' is defined but never used.","'BooleanInput' is defined but never used.","'EditButton' is defined but never used.","'required' is defined but never used.","'number' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'CreateButton' is defined but never used.","'basePath' is assigned a value but never used.",["747"],["748"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'convertFileToBase64Simple' is assigned a value but never used.","'Identifier' is defined but never used.","'Pagination' is defined but never used.","'Sort' is defined but never used.","'Filter' is defined but never used.","'DataProvider' is defined but never used.","'new_latest_collection_code' is assigned a value but never used.","'NumberInput' is defined but never used.","'minLength' is defined but never used.","'maxLength' is defined but never used.","'minValue' is defined but never used.","'maxValue' is defined but never used.","'regex' is defined but never used.","'GMapInput' is defined but never used.",["747"],["748"],"'ImageInput' is defined but never used.","'ImageField' is defined but never used.","'AutocompleteInput' is defined but never used.","'ReferenceArrayInput' is defined but never used.","'SelectArrayInput' is defined but never used.","'TextInput' is defined but never used.","'useQuery' is defined but never used.","'Loading' is defined but never used.","'Error' is defined but never used.","'useFormState' is defined but never used.","'useMutation' is defined but never used.","no-global-assign","no-unsafe-negation"]